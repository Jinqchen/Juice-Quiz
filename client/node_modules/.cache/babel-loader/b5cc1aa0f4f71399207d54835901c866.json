{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12624\\\\Desktop\\\\t1\\\\Juice-Quiz\\\\client\\\\src\\\\newQuiz\\\\quizEditAfter.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Media } from 'reactstrap';\nimport Axios from \"axios\";\nimport './quizEditAfter.css';\nconst initQuestions = [{\n  questionText: '',\n  answerOptions: [{\n    answerText: '',\n    isCorrect: false\n  }, {\n    answerText: '',\n    isCorrect: true\n  }, {\n    answerText: '',\n    isCorrect: false\n  }, {\n    answerText: '',\n    isCorrect: false\n  }],\n  key: 0\n}];\nexport default class quizEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const url = `https://juice-quiz.herokuapp.com/api/answer/${this.state.QID}`; //  const url= `http://localhost:3001/api/answer/${this.state.QID}`;\n\n      Axios.get(url).then(res => {\n        return res.data;\n      }).then(result => {\n        // console.log(result);\n        this.setState({\n          data: result\n        }, () => {\n          console.log(this.state.data);\n        });\n        this.processData();\n      });\n    };\n\n    this.processData = () => {\n      this._isMounted = true; // console.log(this.state.data);\n\n      var data = this.state.data;\n      this.setState({\n        queslength: data.length / 4\n      }); // console.log(index);\n      // console.log(this.state.queslength);\n      // console.log(\"processing\");\n\n      for (var index = 0; index < data.length / 4; index++) {\n        this.setState({\n          quesText: data[index * 4]['Qtext']\n        }); // console.log(this.state.quesText)\n\n        var option1 = {\n          'answerText': data[index * 4]['Optionx'],\n          'isCorrect': data[index * 4]['correctness'] == 1\n        };\n        var option2 = {\n          'answerText': data[index * 4 + 1]['Optionx'],\n          'isCorrect': data[index * 4 + 1]['correctness'] == 1\n        };\n        var option3 = {\n          'answerText': data[index * 4 + 2]['Optionx'],\n          'isCorrect': data[index * 4 + 2]['correctness'] == 1\n        };\n        var option4 = {\n          'answerText': data[index * 4 + 3]['Optionx'],\n          'isCorrect': data[index * 4 + 3]['correctness'] == 1\n        };\n        this.setState({\n          opt1: option1\n        });\n        this.setState({\n          opt2: option2\n        });\n        this.setState({\n          opt3: option3\n        });\n        this.setState({\n          opt4: option4\n        });\n        this.setState({\n          answerOptions: [option1, option2, option3, option4]\n        });\n        var q = {\n          questionText: this.state.quesText,\n          answerOptions: this.state.answerOptions,\n          key: index\n        };\n        this.setState({\n          questions: [...this.state.questions, q]\n        });\n      }\n\n      this.setState({\n        questions: this.state.questions.slice(1)\n      });\n      this.setState({\n        origin: this.state.questions\n      });\n    };\n\n    this.state = {\n      trigger: false,\n      name: \"Description\",\n      description: \"\",\n      PID: 0,\n      QID: localStorage.getItem('QID'),\n      success: true,\n      currentQuestion: 0,\n      questions: initQuestions,\n      origin: initQuestions,\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      option4: \"\",\n      add: [],\n      delete: [],\n      modify: []\n    };\n  }\n\n  handleChangeAnswerText1(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[0].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeAnswerText2(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[1].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeAnswerText3(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[2].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeAnswerText4(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[3].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeDiscription(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].questionText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  setAsAnswer(index) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions.forEach(element => {\n      element.isCorrect = false;\n    });\n    tmp[this.state.currentQuestion].answerOptions[index].isCorrect = true;\n    this.setState({\n      tmp\n    }); // console.log(tmp[this.state.currentQuestion].answerOptions[index].isCorrect)     \n  } //sun\n\n\n  submit() {\n    if (this.state.origin.length < this.state.questions.length) {\n      this.insert();\n    } else if (this.state.origin.length > this.state.questions.length) {\n      this.delete();\n    }\n\n    this.update();\n  }\n\n  insert() {\n    var question = [];\n\n    for (var i = this.state.origin.length + 1; i <= this.state.questions.length; i++) {\n      question.push({\n        questionText: ' ',\n        answerOptions: [{\n          answerText: ' ',\n          isCorrect: true\n        }, {\n          answerText: ' ',\n          isCorrect: false\n        }, {\n          answerText: ' ',\n          isCorrect: false\n        }, {\n          answerText: ' ',\n          isCorrect: false\n        }],\n        key: i\n      });\n    } // console.log(question);\n\n\n    const url = 'https://juice-quiz.herokuapp.com/api/quizsetEdit/insert'; //  const url= 'http://localhost:3001/api/quizsetEdit/insert';\n\n    Axios.post(url, {\n      QID: localStorage.getItem('QID'),\n      questions: question\n    });\n  }\n\n  delete() {\n    var del = [];\n\n    for (var i = this.state.questions.length + 1; i <= this.state.origin.length; i++) {\n      del.push(i);\n    } // console.log(del);\n\n\n    const url = 'https://juice-quiz.herokuapp.com/quizsetEdit/delete'; //const url= 'http://localhost:3001/api/quizsetEdit/delete';\n\n    Axios.delete(url, {\n      data: {\n        QID: localStorage.getItem('QID'),\n        del: del\n      }\n    });\n  }\n\n  update() {\n    const url = `https://juice-quiz.herokuapp.com/api/quizsetEdit/change`; // const url= `http://localhost:3001/api/quizsetEdit/change`;\n\n    console.log(this.state.questions);\n    Axios.put(url, {\n      QID: localStorage.getItem('QID'),\n      question: this.state.questions\n    }).then(response => {//  console.log(response); \n    });\n  }\n\n  switchQuestion(index) {\n    this.setState({\n      currentQuestion: index\n    }); // console.log(this.state.currentQuestion)\n    // console.log(this.state.questions[this.state.currentQuestion].questionText+\"index1\")\n  }\n\n  discriptionContent() {\n    //  console.log(this.state.questions)\n    let description = this.state.questions[this.state.currentQuestion].questionText;\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      value: description,\n      className: \"questionDiscription\",\n      rows: \"5\",\n      cols: \"50\",\n      required: true,\n      onChange: this.handleChangeDiscription.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    });\n  }\n\n  addNewQuestion() {\n    this.setState({\n      questions: [...this.state.questions, {\n        questionText: ' ',\n        answerOptions: [{\n          answerText: ' ',\n          isCorrect: true\n        }, {\n          answerText: ' ',\n          isCorrect: false\n        }, {\n          answerText: ' ',\n          isCorrect: false\n        }, {\n          answerText: ' ',\n          isCorrect: false\n        }],\n        key: this.state.questions.length\n      }]\n    });\n  }\n\n  deleteCurrentQuestion() {\n    let tmp = [];\n\n    for (let i = 0; i < this.state.questions.length; i++) {\n      if (this.state.questions[i].key != this.state.currentQuestion) {\n        tmp = [...tmp, this.state.questions[i]];\n      }\n    }\n\n    for (let i = 0; i < tmp.length; i++) {\n      tmp[i].key = i; // console.log(tmp[i].key)\n    }\n\n    this.setState({\n      questions: tmp\n    });\n    this.setState({\n      currentQuestion: 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editQuizeditBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/logo.jpg\",\n      className: \"quizInitIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editQuestionList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }, this.state.questions.map((item, index) => {\n      console.log(this.state.currentQuestion == index);\n      return this.state.currentQuestion == index && /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          color: \"black\"\n        },\n        type: \"button\",\n        onClick: () => this.switchQuestion(item.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 57\n        }\n      }, item.key + 1) || /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          color: \"white\"\n        },\n        type: \"button\",\n        onClick: () => this.switchQuestion(item.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 172\n        }\n      }, item.key + 1);\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        color: \"white\"\n      },\n      type: \"button\",\n      onClick: () => this.addNewQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 16\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"QEAeditForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"editInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }\n    }, \" \", this.state.name), this.discriptionContent(), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[0].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText1.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[0].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 86\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 192\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[1].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText2.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[1].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 88\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 193\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[2].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText3.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[2].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 92\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 198\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[3].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText4.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[3].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 91\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 197\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editListButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"QEAedit\",\n      type: \"button\",\n      onClick: () => this.deleteCurrentQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 8\n      }\n    }, \"delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"QEAsubmit\",\n      onClick: () => this.submit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 7\n      }\n    }, \"Submit\")))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/12624/Desktop/t1/Juice-Quiz/client/src/newQuiz/quizEditAfter.js"],"names":["React","Component","Link","Media","Axios","initQuestions","questionText","answerOptions","answerText","isCorrect","key","quizEdit","constructor","props","componentDidMount","url","state","QID","get","then","res","data","result","setState","console","log","processData","_isMounted","queslength","length","index","quesText","option1","option2","option3","option4","opt1","opt2","opt3","opt4","q","questions","slice","origin","trigger","name","description","PID","localStorage","getItem","success","currentQuestion","add","delete","modify","handleChangeAnswerText1","e","tmp","target","value","handleChangeAnswerText2","handleChangeAnswerText3","handleChangeAnswerText4","handleChangeDiscription","setAsAnswer","forEach","element","submit","insert","update","question","i","push","post","del","put","response","switchQuestion","discriptionContent","bind","addNewQuestion","deleteCurrentQuestion","render","map","item","color","handleSubmit","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';  \r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Media } from 'reactstrap'; \r\nimport Axios from \"axios\";  \r\nimport './quizEditAfter.css'\r\nconst initQuestions=   [\r\n  {\r\n      questionText: '',\r\n      answerOptions: [\r\n          { answerText: '', isCorrect: false },\r\n          { answerText: '', isCorrect: true },\r\n          { answerText: '', isCorrect: false },\r\n          { answerText: '', isCorrect: false },\r\n      ],\r\n      key:0\r\n  },\r\n]\r\n    export default class quizEdit extends Component {\r\n\r\n    \r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n              trigger:false,   \r\n              name:\"Description\",\r\n              description:\"\",\r\n              PID:0,\r\n              QID:localStorage.getItem('QID'),\r\n              success:true,\r\n              currentQuestion:0,\r\n              questions:initQuestions , \r\n              origin:initQuestions,\r\n              option1:\"\",\r\n              option2:\"\",\r\n              option3:\"\",\r\n              option4:\"\",\r\n              add:[],\r\n              delete:[],\r\n              modify:[]\r\n            };    \r\n           \r\n          }\r\n        \r\n      \r\n          componentDidMount = () => {\r\n           const url = `https://juice-quiz.herokuapp.com/api/answer/${this.state.QID}`;\r\n        //  const url= `http://localhost:3001/api/answer/${this.state.QID}`;\r\n            Axios.get(url)\r\n        .then(res=>{return res.data})\r\n        .then( result =>{ \r\n          // console.log(result);\r\n          this.setState({data:result},()=>{console.log(this.state.data);});\r\n          this.processData()       \r\n         });\r\n    \r\n        \r\n      }\r\n\r\n      processData = () => {\r\n        this._isMounted = true;\r\n        // console.log(this.state.data);\r\n        var data= this.state.data\r\n        this.setState({ queslength: data.length/4 });\r\n        \r\n        // console.log(index);\r\n        // console.log(this.state.queslength);\r\n        // console.log(\"processing\");\r\n\r\n        for (var index=0; index< (data.length/4) ;index++){\r\n        this.setState({ quesText: data[index*4]['Qtext'] });\r\n        // console.log(this.state.quesText)\r\n        var option1 = {'answerText':data[index*4]['Optionx'],'isCorrect':data[index*4]['correctness']==1};\r\n        var option2 = {'answerText':data[index*4+1]['Optionx'],'isCorrect':data[index*4+1]['correctness']==1};\r\n        var option3 = {'answerText':data[index*4+2]['Optionx'],'isCorrect':data[index*4+2]['correctness']==1};\r\n        var option4 = {'answerText':data[index*4+3]['Optionx'],'isCorrect':data[index*4+3]['correctness']==1};\r\n        \r\n        this.setState({ opt1: option1 });\r\n        this.setState({ opt2: option2 });\r\n        this.setState({ opt3: option3 });\r\n        this.setState({ opt4: option4 });\r\n        this.setState({ answerOptions: [option1, option2, option3, option4] });\r\n        var q= {\r\n          questionText: this.state.quesText,\r\n          answerOptions: this.state.answerOptions,\r\n          key:index\r\n      };\r\n      this.setState({questions:[...this.state.questions,q]})\r\n    }\r\n      this.setState({questions:this.state.questions.slice(1)})\r\n      this.setState({origin:this.state.questions})\r\n      }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        handleChangeAnswerText1(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[0].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n     \r\n        handleChangeAnswerText2(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[1].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n\r\n        handleChangeAnswerText3(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[2].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n\r\n        handleChangeAnswerText4(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[3].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n        handleChangeDiscription(e) {   \r\n    let tmp = [...this.state.questions];       \r\n    tmp[this.state.currentQuestion].questionText=e.target.value \r\n      this.setState({ tmp });      \r\n    \r\n\r\n        }\r\n\r\n       \r\n        \r\n        setAsAnswer(index){ \r\n        let tmp = [...this.state.questions];       \r\n        tmp[this.state.currentQuestion].answerOptions.forEach(element => {\r\n          element.isCorrect=false\r\n         });\r\n        \r\n        tmp[this.state.currentQuestion].answerOptions[index].isCorrect = true;  \r\n          this.setState({ tmp });    \r\n        // console.log(tmp[this.state.currentQuestion].answerOptions[index].isCorrect)     \r\n        }\r\n        \r\n        \r\n        \r\n        //sun\r\n        submit(){  \r\n          \r\n            if (this.state.origin.length<this.state.questions.length){\r\n              this.insert();\r\n            }\r\n            else if(this.state.origin.length>this.state.questions.length){\r\n             this.delete();\r\n            }\r\n           \r\n            this.update();        \r\n    \r\n    }\r\n\r\n\r\n\r\n         insert(){\r\n           var question=[]\r\n          for(var i= this.state.origin.length+1; i<=this.state.questions.length; i++){\r\n            question.push({\r\n              questionText: ' ',\r\n              answerOptions: [\r\n                  { answerText: ' ', isCorrect: true },\r\n                  { answerText: ' ', isCorrect: false },\r\n                  { answerText: ' ', isCorrect: false },\r\n                  { answerText: ' ', isCorrect: false },\r\n              ],\r\n              key:i\r\n          })\r\n          }\r\n          // console.log(question);\r\n        \r\n            const url = 'https://juice-quiz.herokuapp.com/api/quizsetEdit/insert';\r\n          //  const url= 'http://localhost:3001/api/quizsetEdit/insert';\r\n                  \r\n            Axios.post(url, { \r\n                QID: localStorage.getItem('QID'), \r\n                questions:question \r\n})\r\n}\r\n\r\n\r\n            delete(){\r\n              var del=[]\r\n              for(var i= this.state.questions.length+1; i<=this.state.origin.length; i++){\r\n                del.push(i)\r\n              }\r\n              // console.log(del);\r\n                  const url = 'https://juice-quiz.herokuapp.com/quizsetEdit/delete';\r\n              //const url= 'http://localhost:3001/api/quizsetEdit/delete';\r\n                      \r\n                Axios.delete(url, { data:{\r\n                  QID: localStorage.getItem('QID'), \r\n                  del:del }\r\n                    \r\n    })             \r\n            }\r\n\r\n \r\n       update(){\r\n  const url = `https://juice-quiz.herokuapp.com/api/quizsetEdit/change`;\r\n// const url= `http://localhost:3001/api/quizsetEdit/change`;\r\n     console.log(this.state.questions);\r\n Axios.put(url,{QID:localStorage.getItem('QID'),\r\n  question:this.state.questions\r\n  \r\n}).then((response) => { \r\n//  console.log(response); \r\n }\r\n )\r\n\r\n\r\n\r\n\r\n      }\r\n            \r\n      switchQuestion(index){  \r\n       this.setState({currentQuestion:index})\r\n        // console.log(this.state.currentQuestion)\r\n        \r\n        // console.log(this.state.questions[this.state.currentQuestion].questionText+\"index1\")\r\n        \r\n      }\r\n       \r\n        \r\n    \r\n\r\n  \r\n\r\n   discriptionContent(){\r\n    //  console.log(this.state.questions)\r\n     let description=this.state.questions[this.state.currentQuestion].questionText\r\n     return(\r\n      <textarea    value={description}\r\n      className=\"questionDiscription\" rows=\"5\" cols=\"50\" required onChange={this.handleChangeDiscription.bind(this)} > \r\n </textarea>\r\n     )\r\n   }\r\n\r\n\r\n   addNewQuestion(){\r\n  this.setState({ questions: [...this.state.questions, {\r\n    questionText: ' ',\r\n    answerOptions: [\r\n        { answerText: ' ', isCorrect: true },\r\n        { answerText: ' ', isCorrect: false },\r\n        { answerText: ' ', isCorrect: false },\r\n        { answerText: ' ', isCorrect: false },\r\n    ],\r\n    key:this.state.questions.length\r\n}] })  \r\n\r\n \r\n   }\r\n\r\n   deleteCurrentQuestion(){ \r\n     let tmp=[]; \r\n     for (let i = 0; i <  this.state.questions.length; i++) {\r\n\r\n      if(this.state.questions[i].key!=this.state.currentQuestion){ \r\n        tmp=[...tmp,this.state.questions[i]] ;  \r\n       }\r\n    }\r\n  \r\n    for (let i = 0; i <  tmp.length; i++) {\r\n    tmp[i].key=i \r\n    // console.log(tmp[i].key)\r\n    } \r\n     this.setState({ questions:tmp})  \r\n    this.setState({ currentQuestion:0})\r\n   }\r\n\r\nrender(){  \r\n   \r\n\treturn (\r\n\t\t<>\r\n        <span>\r\n      \r\n\t\t <div className='editQuizeditBoard'> \r\n         <img src=\"/logo.jpg\" className=\"quizInitIcon\"></img>  \r\n        <div className=\"editQuestionList\">\r\n        {this.state.questions.map((item, index) => {\r\n           console.log( this.state.currentQuestion==index)\r\n                return (  \r\n                   this.state.currentQuestion==index&&  <button style={{color:\"black\"}} type=\"button\" onClick={()=>this.switchQuestion(item.key)}>{item.key+1}</button> || <button style={{color:\"white\"}} type=\"button\" onClick={()=>this.switchQuestion(item.key)}>{item.key+1}</button> \r\n                );\r\n              })}\r\n               <button  style={{color:\"white\"}} type=\"button\" onClick={()=>this.addNewQuestion()} >+</button> \r\n        </div>\r\n        \r\n\r\n         <div className=\"editContent\">\r\n        <form onSubmit={this.handleSubmit} className=\"QEAeditForm\">\r\n             \r\n     \r\n      <label className='editInput'  > {this.state.name}\r\n        </label>   \r\n \r\n\r\n      {  this.discriptionContent()\r\n              } \r\n \r\n\r\n  \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[0].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText1.bind(this)}>\r\n     \r\n          </input>  \r\n      {!this.state.questions[this.state.currentQuestion].answerOptions[0].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(0)} >set as answer</button>  ||<label style={{display:\"inline-block\"}}>√</label>\r\n      }  \r\n \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[1].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText2.bind(this)}>\r\n     \r\n     </input>  \r\n        {!this.state.questions[this.state.currentQuestion].answerOptions[1].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(1)} >set as answer</button> ||<label>√</label>\r\n      } \r\n       \r\n \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[2].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText3.bind(this)}>\r\n     \r\n     </input> \r\n            {!this.state.questions[this.state.currentQuestion].answerOptions[2].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(2)} >set as answer</button>  ||<label>√</label>\r\n      }  \r\n \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[3].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText4.bind(this)}>\r\n     \r\n     </input> \r\n           {!this.state.questions[this.state.currentQuestion].answerOptions[3].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(3)} >set as answer</button>  ||<label>√</label>\r\n      }  \r\n\r\n\r\n       <div className=\"editListButton\">\r\n       {/* <button className=\"QEAedit\" type=\"button\" onClick={()=>this.addNewQuestion()} >new</button>  */}\r\n       <button className=\"QEAedit\" type=\"button\"  onClick={()=>this.deleteCurrentQuestion()} >delete</button>\r\n       \r\n      <button type=\"button\" className=\"QEAsubmit\" onClick={()=>this.submit()} >Submit</button>   \r\n       </div>\r\n        \r\n       </form>\r\n       </div>\r\n         </div>\r\n         </span>\r\n\t\t\t  </>\r\n\t\t\t  \r\n\t);\r\n  \r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}