{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\dry19\\\\Documents\\\\GitHub\\\\Juice-Quiz\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\dry19\\\\Documents\\\\GitHub\\\\Juice-Quiz\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\dry19\\\\Documents\\\\GitHub\\\\Juice-Quiz\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\dry19\\\\Documents\\\\GitHub\\\\Juice-Quiz\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Component}from'react';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.componentDidMount=function(){console.log(\"Component did mount\");setTimeout(function(){fetch('https://juice-quiz.herokuapp.com/api/get').then(function(response){return response.json();}).then(function(json){console.log(json);var myJSON=JSON.stringify(json);var myObj=JSON.parse(myJSON);_this.setState({ques:JSON.stringify(myObj)});console.log(\"before\");_this.processData();console.log(\"after\");});});};_this.processData=function(){var data=JSON.parse(_this.state.ques);_this.setState({queslength:data[\"count(QuestionID)\"]});var index=_this.state.currentQuestion;console.log(index);console.log(_this.state.queslength);console.log(\"processing\");var Optionx=data[index+1]['Optionx'];var option1=Optionx[0];var option2=Optionx[1];var option3=Optionx[2];var option4=Optionx[3];_this.setState({quesText:data[index+1]['Qtext']});_this.setState({opt1:option1});_this.setState({opt2:option2});_this.setState({opt3:option3});_this.setState({opt4:option4});_this.setState({answerOptions:[option1,option2,option3,option4]});};_this.handleNextQuestion=function(answerOption){var currentQuestion=_this.state.currentQuestion;console.log('handler');var isCorrect=false;if(answerOption[\"correctness\"]===1){isCorrect=true;}var currentScore=_this.state.currentScore;var questlen=_this.state.queslength;var nextQuestion=currentQuestion+1;if(nextQuestion<questlen){if(isCorrect){currentScore=currentScore+1;_this.setState({currentScore:currentScore});}_this.setState({currentQuestion:nextQuestion});}else{if(isCorrect){currentScore=currentScore+1;_this.setState({currentScore:currentScore});}_this.setState({showScore:true});};console.log(_this.state.currentQuestion);_this.processData();};_this.state={currentQuestion:0,showScore:false,currentScore:0,ques:[],queslength:0,quesText:\"\",opt1:\"\",opt2:\"\",opt3:\"\",opt4:\"\",answerOptions:[]};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},this.state.showScore?/*#__PURE__*/React.createElement(\"div\",{className:\"score-section\"},\"You scored  out of \",this.state.currentScore):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question-count\"},/*#__PURE__*/React.createElement(\"span\",null,\"Question \",this.state.currentQuestion+1,\" \"),\"/\"),/*#__PURE__*/React.createElement(\"div\",{className:\"question-text\"},this.state.quesText)),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-section\"},this.state.answerOptions.map(function(answerOption){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.handleNextQuestion(answerOption);}},answerOption['Optionx']);}))));}}]);return App;}(Component);export{App as default};","map":{"version":3,"sources":["C:/Users/dry19/Documents/GitHub/Juice-Quiz/client/src/App.js"],"names":["React","Component","App","props","componentDidMount","console","log","setTimeout","fetch","then","response","json","myJSON","JSON","stringify","myObj","parse","setState","ques","processData","data","state","queslength","index","currentQuestion","Optionx","option1","option2","option3","option4","quesText","opt1","opt2","opt3","opt4","answerOptions","handleNextQuestion","answerOption","isCorrect","currentScore","questlen","nextQuestion","showScore","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentQuestion:0,\r\n\t\t\tshowScore:false,\r\n\t\t\tcurrentScore:0,\r\n\t\t\tques:[],\r\n\t\t\tqueslength:0,\r\n\t\t\tquesText:\"\",\r\n\t\t\topt1:\"\",\r\n\t\t\topt2:\"\",\r\n\t\t\topt3:\"\",\r\n\t\t\topt4:\"\",\r\n\t\t\tanswerOptions:[]\r\n\t\t};\r\n\t  }\r\n\t\r\n\tcomponentDidMount=()=>{\r\n       \r\n\t\tconsole.log(\"Component did mount\")\r\n\t\tsetTimeout(()=>{\r\n\t\t\tfetch('https://juice-quiz.herokuapp.com/api/get')\r\n        .then(response => {return response.json()})\r\n        .then(json=>  {\r\n\t\t console.log(json);\r\n\t\t var myJSON = JSON.stringify(json);\r\n\t     var myObj = JSON.parse(myJSON);\r\n\t\t this.setState({ques:JSON.stringify(myObj) });\r\n\t\t console.log(\"before\");\r\n\t\t this.processData();\r\n\t\t console.log(\"after\");\r\n\t\t \r\n   })   \r\n})\r\n   \r\n\r\n      }\r\n    \r\n\r\n\r\n\r\n\t    processData =()=>{\r\n\t\t\tvar data = JSON.parse(this.state.ques);\r\n\t\t\tthis.setState({queslength:data[\"count(QuestionID)\"]});\r\n\t\t\tlet index = this.state.currentQuestion;\r\n\t\t\tconsole.log(index);\r\n\t\t\tconsole.log(this.state.queslength);\r\n\t\t\tconsole.log(\"processing\");\r\n\t\t\tlet Optionx = data[index+1]['Optionx'];\r\n\t\t\tvar option1 =Optionx[0];\r\n\t\t\tvar option2 =Optionx[1];\r\n\t\t\tvar option3 =Optionx[2];\r\n\t\t\tvar option4 =Optionx[3];\r\n\t\t\tthis.setState({quesText:data[index+1]['Qtext']});\r\n\t\t\tthis.setState({opt1:option1});\r\n\t\t\tthis.setState({opt2:option2});\r\n\t\t\tthis.setState({opt3:option3});\r\n\t\t\tthis.setState({opt4:option4});\r\n\t\t\tthis.setState({answerOptions:[option1,option2,option3,option4]});\r\n\t\t}\r\n\t\t\r\n        \r\n\t\thandleNextQuestion =(answerOption)=>{\r\n\t\tvar currentQuestion = this.state.currentQuestion;\r\n\t\tconsole.log('handler');\r\n\t\tvar isCorrect = false;\r\n\t    if (answerOption[\"correctness\"] === 1){isCorrect = true;}\r\n\r\n\t    var currentScore = this.state.currentScore;\r\n\t    var questlen = this.state.queslength;\r\n\t\tconst nextQuestion=currentQuestion+1;\r\n\t\tif(nextQuestion<questlen){\r\n\t\t\tif(isCorrect){\r\n\t\t\t \tcurrentScore = currentScore +1;\r\n\t\t\t\t this.setState({currentScore:currentScore});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({currentQuestion:nextQuestion});\r\n\t\t}else{\r\n\t\t\tif(isCorrect){\r\n\t\t\t\tcurrentScore = currentScore +1;\r\n\t\t\t\tthis.setState({currentScore:currentScore})}\r\n\t\t\t    this.setState({showScore:true}) ;\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(this.state.currentQuestion);\r\n\t\tthis.processData();\r\n\t}\r\n\t\r\n\r\n   \r\n\r\n\r\n\t\t\r\n  render(){\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{this.state.showScore ? (\r\n\t\t\t\t<div className='score-section'>You scored  out of {this.state.currentScore}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {this.state.currentQuestion+1} </span>/\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{this.state.quesText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t {this.state.answerOptions.map((answerOption)=>\r\n\t\t\t\t\t\t <button onClick={()=>this.handleNextQuestion(answerOption)}>{answerOption['Optionx']}</button>\r\n\t\t\t\t\t\t )}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}}\r\n"]},"metadata":{},"sourceType":"module"}