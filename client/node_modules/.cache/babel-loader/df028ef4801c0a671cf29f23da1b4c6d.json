{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12624\\\\Desktop\\\\t1\\\\Juice-Quiz\\\\client\\\\src\\\\Answering.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Axios from \"axios\";\nimport './answer_question.css';\nimport { Link } from \"react-router-dom\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.get_time();\n      const url = `https://juice-quiz.herokuapp.com/api/answer/${this.state.QID}`; //const url= `http://localhost:3001/api/answer/${this.state.QID}`;\n\n      console.log(\"Component did mount\");\n      Axios.get(url).then(res => {\n        return res.data;\n      }).then(result => {\n        console.log(result);\n        this.setState({\n          data: result\n        }, () => {\n          console.log(this.state.data);\n        });\n        this.processData();\n      });\n    };\n\n    this.processData = () => {\n      console.log(this.state.data);\n      var data = this.state.data;\n      this.setState({\n        queslength: data.length / 4\n      });\n      let index = this.state.currentQuestion * 4;\n      console.log(index);\n      console.log(this.state.queslength);\n      console.log(\"processing\");\n      this.setState({\n        quesText: data[index]['Qtext']\n      });\n      console.log(this.state.quesText);\n      var option1 = {\n        'text': data[index]['Optionx'],\n        'correctness': data[index]['correctness']\n      };\n      var option2 = {\n        'text': data[index + 1]['Optionx'],\n        'correctness': data[index + 1]['correctness']\n      };\n      var option3 = {\n        'text': data[index + 2]['Optionx'],\n        'correctness': data[index + 2]['correctness']\n      };\n      var option4 = {\n        'text': data[index + 3]['Optionx'],\n        'correctness': data[index + 3]['correctness']\n      };\n      this.setState({\n        opt1: option1\n      });\n      this.setState({\n        opt2: option2\n      });\n      this.setState({\n        opt3: option3\n      });\n      this.setState({\n        opt4: option4\n      });\n      this.setState({\n        answerOptions: [option1, option2, option3, option4]\n      });\n      console.log(this.state.answerOptions);\n      this.no();\n    };\n\n    this.handleNextQuestion = answerOption => {\n      var is_Mount = false;\n      var currentQuestion = this.state.currentQuestion;\n      console.log('handler');\n      var isCorrect = false;\n\n      if (answerOption[\"correctness\"] === 1) {\n        isCorrect = true;\n      }\n\n      var currentScore = this.state.currentScore;\n      var questlen = this.state.queslength;\n      const nextQuestion = currentQuestion + 1;\n      console.log(nextQuestion);\n      console.log('questlen');\n      this.setState({\n        currentQuestion: nextQuestion\n      }, () => {\n        ;\n\n        if (nextQuestion < questlen) {\n          if (isCorrect) {\n            currentScore = currentScore + 1;\n            this.setState({\n              currentScore: currentScore\n            });\n          }\n\n          this.processData();\n        } else {\n          if (isCorrect) {\n            currentScore = currentScore + 1;\n            this.setState({\n              currentScore: currentScore\n            });\n          }\n\n          this.setState({\n            showScore: true\n          });\n        }\n\n        ;\n      });\n\n      if (this.state.currentQuestion == this.state.queslength - 1) {\n        console.log(\"ss\");\n      }\n    };\n\n    this.addRep = () => {\n      const url = `https://juice-quiz.herokuapp.com/api/answer/updateRep/${this.state.QID}`; //const url= `http://localhost:3001/api/answer/updateRep/${this.state.QID}`;\n\n      Axios.put(url, {\n        PID: this.state.PID,\n        UID: localStorage.getItem('UID')\n      }).then(response => {\n        console.log(response);\n      });\n      this.addHistory();\n    };\n\n    this.state = {\n      data: \"\",\n      currentQuestion: 0,\n      showScore: false,\n      currentScore: 0,\n      ques: [],\n      queslength: 0,\n      quesText: \"\",\n      opt1: \"\",\n      opt2: \"\",\n      opt3: \"\",\n      opt4: \"\",\n      answerOptions: [],\n      QID: localStorage.getItem('QID'),\n      PID: localStorage.getItem('PID'),\n      is_Mount: false,\n      hour: 1,\n      minute: 0,\n      second: 5,\n      time: 0,\n      TimeLimitFlag: true,\n      timeSpend: 0\n    };\n    this.start = this.start.bind(this);\n    this.no = this.no.bind(this);\n  }\n\n  start() {\n    if (this.state.second > 0) {\n      this.setState({\n        minute: this.state.minute,\n        second: this.state.second - 1\n      });\n    } else {\n      this.setState({\n        minute: this.state.minute - 1,\n        second: this.state.second + 60\n      });\n    }\n\n    this.setState({\n      timeSpend: this.state.timeSpend + 1\n    });\n  }\n\n  no() {\n    if (this.state.TimeLimitFlag) {\n      this.id = setInterval(this.start, 1000);\n    }\n  }\n\n  checkTime() {\n    if (!this.state.showScore && this.state.minute + this.state.second <= 0) {\n      this.setState({\n        showScore: true\n      });\n    }\n  }\n\n  get_time() {\n    //const url = `https://juice-quiz.herokuapp.com/api/answer/time/${this.state.QID}`;\n    const url = `http://localhost:3001/api/answer/time/${this.state.QID}`;\n    Axios.get(url).then(res => {\n      return res.data;\n    }).then(result => {\n      console.log(result[0]['TakeTime']);\n      var time = result[0]['TakeTime'];\n      var min = parseInt(time / 60);\n      var sec = time - min * 60;\n      this.setState({\n        time: result[0]['TakeTime']\n      });\n      this.setState({\n        second: sec\n      });\n      this.setState({\n        minute: min\n      });\n      console.log(this.state.minute);\n      console.log(this.state.second);\n    });\n  }\n\n  addHistory() {\n    const url = `https://juice-quiz.herokuapp.com/api/answer/updateHIS/${this.state.QID}`; //\t   const url= `http://localhost:3001/api/answer/updateHIS/${this.state.QID}`;\n\n    Axios.post(url, {\n      UID: localStorage.getItem('UID'),\n      Score: this.state.currentScore / this.state.queslength,\n      timeSpend: this.state.timeSpend\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  render() {\n    this.checkTime();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answering\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 4\n      }\n    }, this.state.showScore ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 1\n      }\n    }, \"Finished\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/quizRate\",\n        state: {\n          abb: 1\n        }\n      },\n      onClick: () => this.addRep(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 1\n      }\n    }, \"Submit\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, \"Question \", this.state.currentQuestion + 1, \" \"), \"/\", this.state.queslength), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 8\n      }\n    }, this.state.quesText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, this.state.answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      classname: \"answering_Btn\",\n      onClick: () => this.handleNextQuestion(answerOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, answerOption['text']))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }\n    }, this.state.TimeLimitFlag && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Timer_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }\n    }, \"Time remain: \", this.state.minute, \"m : \", this.state.second, \"s\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/12624/Desktop/t1/Juice-Quiz/client/src/Answering.js"],"names":["React","Component","Axios","Link","App","constructor","props","componentDidMount","get_time","url","state","QID","console","log","get","then","res","data","result","setState","processData","queslength","length","index","currentQuestion","quesText","option1","option2","option3","option4","opt1","opt2","opt3","opt4","answerOptions","no","handleNextQuestion","answerOption","is_Mount","isCorrect","currentScore","questlen","nextQuestion","showScore","addRep","put","PID","UID","localStorage","getItem","response","addHistory","ques","hour","minute","second","time","TimeLimitFlag","timeSpend","start","bind","id","setInterval","checkTime","min","parseInt","sec","post","Score","render","pathname","abb","color","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport Axios from \"axios\";\r\nimport './answer_question.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nexport default class App extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata:\"\",\r\n\t\t\tcurrentQuestion: 0,\r\n\t\t\tshowScore: false,\r\n\t\t\tcurrentScore: 0,\r\n\t\t\tques: [],\r\n\t\t\tqueslength: 0,\r\n\t\t\tquesText: \"\",\r\n\t\t\topt1: \"\",\r\n\t\t\topt2: \"\",\r\n\t\t\topt3: \"\",\r\n\t\t\topt4: \"\",\r\n\t\t\tanswerOptions: [],\r\n\t\t\tQID: localStorage.getItem('QID'),\r\n\t\t\tPID: localStorage.getItem('PID'),\r\n\t\t\tis_Mount:false,\r\n\t\t\thour:1,\r\n\t\t\tminute:0,\r\n      \t\tsecond:5,\r\n\t\t\ttime:0,\r\n\t\t\tTimeLimitFlag:true,\r\n\t\t\ttimeSpend:0\r\n\t\t};\r\n\t\tthis.start = this.start.bind(this)\r\n        this.no = this.no.bind(this) \r\n\t}\r\n\r\n\r\n\t\r\n\tstart(){\r\n         if(this.state.second>0){\r\n\t       this.setState({\r\n\t\t\tminute:this.state.minute,\r\n\t\t\tsecond:this.state.second - 1\r\n\t\t  }) \r\n\t\r\n\t\t}\r\n\t else{\r\n\t\r\n\t\t   this.setState({\r\n\t\t\tminute:this.state.minute - 1,\r\n\t\t\tsecond:this.state.second + 60\r\n\t\t  }) \r\n\t\r\n\t\t}\r\n\t   this.setState({timeSpend: this.state.timeSpend+1})\r\n\t  }\r\n\t\r\n\t  no(){\r\n\t\t  if(this.state.TimeLimitFlag){\r\n          this.id = setInterval(this.start,1000)\r\n\t\t  }\r\n\t\t\r\n\t  } \r\n\r\n\t  checkTime(){\r\n\t\t   \r\n\t\t  if(!this.state.showScore&&this.state.minute+this.state.second<=0){\r\n\t\t\t  this.setState({showScore:true})\r\n\t\t  }\r\n\t  }\r\n\tcomponentDidMount = () => {\r\n\t\tthis.get_time();\r\n         const url = `https://juice-quiz.herokuapp.com/api/answer/${this.state.QID}`;\r\n\t\t//const url= `http://localhost:3001/api/answer/${this.state.QID}`;\r\n\t\tconsole.log(\"Component did mount\")\r\n        Axios.get(url)\r\n\t\t.then(res=>{return res.data})\r\n\t\t.then( result =>{ \r\n\t\t\tconsole.log(result);\r\n\t\t\tthis.setState({data:result},()=>{console.log(this.state.data);});\r\n\t\t\tthis.processData()       \r\n\t\t });\r\n\r\n    \r\n\t}\r\n    \r\n\r\n\tget_time(){\r\n\t\t//const url = `https://juice-quiz.herokuapp.com/api/answer/time/${this.state.QID}`;\r\n\t\tconst url= `http://localhost:3001/api/answer/time/${this.state.QID}`;\r\n        Axios.get(url)\r\n\t\t.then(res=>{return res.data})\r\n\t\t.then( result =>{ \r\n\t\t\tconsole.log(result[0]['TakeTime']);\r\n\t\t\tvar time =result[0]['TakeTime'];\r\n\t\t\tvar min=parseInt(time / 60);\r\n\t\t\tvar sec = time-min*60;\r\n\r\n\t\t\t\r\n\t\t\tthis.setState({time:result[0]['TakeTime']});\t\r\n\t\t\tthis.setState({second:sec})\t \r\n\t\t\tthis.setState({minute:min})\t \r\n\t\t\tconsole.log(this.state.minute)\r\n\t\t\tconsole.log(this.state.second)     \r\n\t\t });\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tprocessData = () => {\r\n\t\tconsole.log(this.state.data);\r\n\t\tvar data= this.state.data\r\n\t\tthis.setState({ queslength: data.length/4 });\r\n\t\tlet index = this.state.currentQuestion*4;\r\n\t\tconsole.log(index);\r\n\t\tconsole.log(this.state.queslength);\r\n\t\tconsole.log(\"processing\");\r\n\t\tthis.setState({ quesText: data[index]['Qtext'] });\r\n\t\tconsole.log(this.state.quesText)\r\n\t\tvar option1 = {'text':data[index]['Optionx'],'correctness':data[index]['correctness']};\r\n\t\tvar option2 = {'text':data[index+1]['Optionx'],'correctness':data[index+1]['correctness']};\r\n\t\tvar option3 = {'text':data[index+2]['Optionx'],'correctness':data[index+2]['correctness']};\r\n\t\tvar option4 = {'text':data[index+3]['Optionx'],'correctness':data[index+3]['correctness']};\r\n\t\t\r\n\t\tthis.setState({ opt1: option1 });\r\n\t\tthis.setState({ opt2: option2 });\r\n\t\tthis.setState({ opt3: option3 });\r\n\t\tthis.setState({ opt4: option4 });\r\n\t\tthis.setState({ answerOptions: [option1, option2, option3, option4] });\r\n\t\tconsole.log(this.state.answerOptions);\r\n\t\tthis.no()\r\n\t}\r\n\r\n\r\n\thandleNextQuestion = (answerOption) => {\r\n\t\t\tvar is_Mount=false;\r\n\t\t\tvar currentQuestion = this.state.currentQuestion;\r\n\t\t\tconsole.log('handler');\r\n\t\t\tvar isCorrect = false;\r\n\t\t\tif (answerOption[\"correctness\"] === 1) { isCorrect = true; }\r\n\t\r\n\t\t\tvar currentScore = this.state.currentScore;\r\n\t\t\tvar questlen = this.state.queslength;\r\n\t\r\n\t\t\t\r\n\t\t\tconst nextQuestion = currentQuestion+1;\r\n\t\t\tconsole.log(nextQuestion);\r\n\t\t\tconsole.log('questlen');\r\n\t\t\tthis.setState({ currentQuestion: nextQuestion },()=>{;\r\n\t\t\tif (nextQuestion < questlen) {\r\n\t\t\t\tif (isCorrect) {\r\n\t\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\t\tthis.setState({ currentScore: currentScore });\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t            this.processData()\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tif (isCorrect) {\r\n\t\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\t\tthis.setState({ currentScore: currentScore })\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ showScore: true });\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t});\r\n\t\t\tif(this.state.currentQuestion==this.state.queslength-1){\r\n\t\t\t\t\r\n\t\t\tconsole.log(\"ss\")\r\n\t\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\t\t \r\n   \r\n\r\n\r\n\taddHistory() {\r\n\t\t const url = `https://juice-quiz.herokuapp.com/api/answer/updateHIS/${this.state.QID}`;\r\n\t\t//\t   const url= `http://localhost:3001/api/answer/updateHIS/${this.state.QID}`;\r\n\t\t\t\tAxios.post(url,{\r\n\t\t\t\t\tUID:localStorage.getItem('UID'),\r\n\t\t\t\t\tScore: this.state.currentScore/this.state.queslength,\r\n\t\t\t\t\ttimeSpend: this.state.timeSpend\r\n\t\t\t  }).then((response) => { \r\n\t\t\t\tconsole.log(response); \r\n\t\t\t })\r\n\t\t\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\taddRep=()=>{\r\n\t\t \t const url = `https://juice-quiz.herokuapp.com/api/answer/updateRep/${this.state.QID}`;\r\n\t      //const url= `http://localhost:3001/api/answer/updateRep/${this.state.QID}`;\r\n\t\t\tAxios.put(url,{\r\n\t\t\t\tPID:this.state.PID,\r\n\t\t\t\tUID:localStorage.getItem('UID')\r\n\t\t  }).then((response) => { \r\n\t\t\tconsole.log(response);  \r\n\t\t\t\r\n\t\t })\r\n\t\tthis.addHistory()\r\n\t\t }\r\n\r\n\r\n\trender() {\r\n\t\tthis.checkTime();\r\n\t\treturn (\r\n\t\t\t<div className='answering'>\r\n\t\t\t\t{this.state.showScore ? (\r\n\t\t\t\t\t<div>\r\n\r\n<div className='score-section'>Finished</div>\r\n\t\t\t\t\t\t\t{/* state={{id:1}} */}\r\n\t\t\t\t\t\t\t{/* <Link to={  '/quizRate'}  onClick={()=>this.addRep()}> \r\n\t\t\t\t\t\t\tSubmit<button  onClick={()=>this.addRep()>Submit</button>\r\n\t\t\t</Link> */}\r\n\r\n<Link   to ={{\r\n    pathname: \"/quizRate\", \r\n    state: { \r\n       abb:1\r\n    }\r\n   }} onClick={()=>this.addRep()}>\r\n \t Submit\r\n\r\n</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span style={{color:\"black\"}}>Question {this.state.currentQuestion + 1} </span>/{this.state.queslength}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.quesText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{this.state.answerOptions.map((answerOption) =>\r\n\t\t\t\t\t\t\t\t<button classname='answering_Btn' onClick={() => this.handleNextQuestion(answerOption)}>{answerOption['text']}</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t{this.state.TimeLimitFlag&&\t<div className=\"Timer_container\">\r\n\t\t\t\t\t\t\t\tTime remain: {this.state.minute}m : {this.state.second}s\r\n\t\t\t\t\t\t\t\t</div>\r\n }\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n \r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}