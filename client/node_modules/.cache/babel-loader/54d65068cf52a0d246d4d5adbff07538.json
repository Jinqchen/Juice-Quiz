{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12624\\\\Desktop\\\\t1\\\\Juice-Quiz\\\\client\\\\src\\\\newQuiz\\\\quizEdit.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Media } from 'reactstrap';\nimport Axios from \"axios\";\nconst initQuestions = [{\n  questionText: '',\n  answerOptions: [{\n    answerText: '',\n    isCorrect: false\n  }, {\n    answerText: '',\n    isCorrect: true\n  }, {\n    answerText: '',\n    isCorrect: false\n  }, {\n    answerText: '',\n    isCorrect: false\n  }],\n  key: 0\n}];\nexport default class quizEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // const url = `https://juice-quiz.herokuapp.com/api/answer/${this.state.QID}`;\n      const url = `http://localhost:3001/api/answer/${this.state.QID}`;\n      Axios.get(url).then(res => {\n        return res.data;\n      }).then(result => {\n        console.log(\"first fetch\");\n        console.log(result);\n        console.log(\"end of first fetch\");\n        this.setState({\n          data: result\n        }, () => {\n          console.log(this.state.data);\n        });\n        this.processData();\n        this.setState({\n          QID: localStorage.getItem(\"QID\")\n        });\n      });\n    };\n\n    this.processData = () => {\n      this._isMounted = true;\n      console.log(\"start to process data\");\n      console.log(this.state.data);\n      var data = this.state.data;\n      this.setState({\n        queslength: data.length / 4\n      });\n      var index = this.state.currentQuestion * 4;\n      console.log();\n      console.log(index);\n      console.log(this.state.queslength);\n      console.log(\"processing\");\n\n      for (var i = 0; i < data.length / 4; i++) {\n        this.setState({\n          quesText: data[index]['Qtext']\n        });\n        console.log(this.state.quesText);\n        var option1 = {\n          'answerText': data[index]['Optionx'],\n          'isCorrect': data[index]['correctness'] === 1\n        };\n        var option2 = {\n          'answerText': data[index + 1]['Optionx'],\n          'isCorrect': data[index + 1]['correctness'] === 1\n        };\n        var option3 = {\n          'answerText': data[index + 2]['Optionx'],\n          'isCorrect': data[index + 2]['correctness'] === 1\n        };\n        var option4 = {\n          'answerText': data[index + 3]['Optionx'],\n          'isCorrect': data[index + 3]['correctness'] === 1\n        };\n        this.setState({\n          opt1: option1\n        });\n        this.setState({\n          opt2: option2\n        });\n        this.setState({\n          opt3: option3\n        });\n        this.setState({\n          opt4: option4\n        });\n        this.setState({\n          answerOptions: [option1, option2, option3, option4]\n        });\n        var q = {\n          questionText: this.state.quesText,\n          answerOptions: this.state.answerOptions,\n          key: i\n        };\n        this.setState({\n          questions: [...this.state.questions, q]\n        });\n      } //this.setState({questions:this.state.questions.slice(1)})\n\n\n      console.log(this.state.questions);\n    };\n\n    this.state = {\n      trigger: false,\n      name: \"Description\",\n      description: \"\",\n      timeLimited: true,\n      limitedHour: 0,\n      limitedMin: 0,\n      PID: 0,\n      QID: -1,\n      success: true,\n      currentQuestion: 0,\n      questions: initQuestions,\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      option4: \"\",\n      validFlag: false\n    };\n  }\n\n  checkBoard() {\n    let tmp = false;\n    this.state.questions.forEach(element => {\n      console.log(element.questionText + \", \" + element.answerOptions[0].answerText + \", \" + element.answerOptions[1].answerText + \", \" + element.answerOptions[2].answerText + \", \" + element.answerOptions[3].answerText);\n      console.log(element.questionText === \"\" || element.answerOptions[0].answerText === \"\" || element.answerOptions[1].answerText === \"\" || element.answerOptions[2].answerText === \"\" || element.answerOptions[3].answerText === \"\");\n      tmp = tmp || element.questionText === \"\" || element.answerOptions[0].answerText === \"\" || element.answerOptions[1].answerText === \"\" || element.answerOptions[2].answerText === \"\" || element.answerOptions[3].answerText === \"\";\n\n      if (tmp) {// alert(\"empty field in questions!\")  \n      }\n    });\n    console.log(\"tmp: \" + tmp);\n    return tmp;\n  }\n\n  handleChangeAnswerText1(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[0].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeAnswerText2(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[1].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeAnswerText3(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[2].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeAnswerText4(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions[3].answerText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  handleChangeDiscription(e) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].questionText = e.target.value;\n    this.setState({\n      tmp\n    });\n  }\n\n  setAsAnswer(index) {\n    let tmp = [...this.state.questions];\n    tmp[this.state.currentQuestion].answerOptions.forEach(element => {\n      element.isCorrect = false;\n    });\n    tmp[this.state.currentQuestion].answerOptions[index].isCorrect = true;\n    this.setState({\n      tmp\n    });\n    console.log(tmp[this.state.currentQuestion].answerOptions[index].isCorrect);\n  } //sun\n\n\n  submit() {\n    //  const url = 'https://juice-quiz.herokuapp.com/api/quizsetCreate';\n    const url = 'http://localhost:3001/api/quizsetCreate';\n    Axios.post(url, {\n      QID: localStorage.getItem('QID'),\n      questions: this.state.questions\n    }).then(response => {\n      console.log(response);\n      alert(\"create success\");\n    });\n  }\n\n  switchQuestion(index) {\n    this.setState({\n      currentQuestion: index\n    });\n    console.log(this.state.questions[this.state.currentQuestion].key);\n  } // console.log(this.state.questions[this.state.currentQuestion].questionText+\"index1\")\n\n\n  discriptionContent() {\n    let description = this.state.questions[this.state.currentQuestion].questionText;\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      value: description,\n      className: \"questionDiscription\",\n      rows: \"5\",\n      cols: \"50\",\n      required: true,\n      onChange: this.handleChangeDiscription.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    });\n  }\n\n  addNewQuestion() {\n    this.setState({\n      questions: [...this.state.questions, {\n        questionText: '',\n        answerOptions: [{\n          answerText: '',\n          isCorrect: true\n        }, {\n          answerText: '',\n          isCorrect: false\n        }, {\n          answerText: '',\n          isCorrect: false\n        }, {\n          answerText: '',\n          isCorrect: false\n        }],\n        key: this.state.questions.length\n      }]\n    });\n  }\n\n  deleteCurrentQuestion() {\n    if (this.state.questions.length > 1) {\n      let tmp = [];\n\n      for (let i = 0; i < this.state.questions.length; i++) {\n        if (this.state.questions[i].key != this.state.currentQuestion) {\n          tmp = [...tmp, this.state.questions[i]];\n        }\n      }\n\n      for (let i = 0; i < tmp.length; i++) {\n        tmp[i].key = i;\n        console.log(tmp[i].key);\n      }\n\n      this.setState({\n        questions: tmp\n      });\n      this.setState({\n        currentQuestion: 0\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editQuizeditBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/logo.jpg\",\n      className: \"quizInitIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editQuestionList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, this.state.questions.map((item, index) => {\n      return this.state.currentQuestion == index && /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          color: \"black\"\n        },\n        type: \"button\",\n        onClick: () => this.switchQuestion(item.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 56\n        }\n      }, item.key + 1) || /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          color: \"white\"\n        },\n        type: \"button\",\n        onClick: () => this.switchQuestion(item.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 171\n        }\n      }, item.key + 1);\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        color: \"white\"\n      },\n      type: \"button\",\n      onClick: () => this.addNewQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"QEAeditForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"editInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }\n    }, \" \", this.state.name), this.discriptionContent(), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[0].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText1.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[0].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 81\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 187\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[1].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText2.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 4\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[1].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 83\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 188\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[2].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText3.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 4\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[2].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 87\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 193\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questions[this.state.currentQuestion].answerOptions[3].answerText,\n      type: \"text\",\n      className: \"editQuizOption\",\n      required: true,\n      onChange: this.handleChangeAnswerText4.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 4\n      }\n    }), !this.state.questions[this.state.currentQuestion].answerOptions[3].isCorrect && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editButton\",\n      onClick: () => this.setAsAnswer(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 86\n      }\n    }, \"set as answer\") || /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 192\n      }\n    }, \"\\u221A\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editListButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.deleteCurrentQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 8\n      }\n    }, \"delete\")), !this.checkBoard() && /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"QEAsubmit\",\n      onClick: () => this.submit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }\n    }, \"Create\")))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/12624/Desktop/t1/Juice-Quiz/client/src/newQuiz/quizEdit.js"],"names":["React","Component","Link","Media","Axios","initQuestions","questionText","answerOptions","answerText","isCorrect","key","quizEdit","constructor","props","componentDidMount","url","state","QID","get","then","res","data","result","console","log","setState","processData","localStorage","getItem","_isMounted","queslength","length","index","currentQuestion","i","quesText","option1","option2","option3","option4","opt1","opt2","opt3","opt4","q","questions","trigger","name","description","timeLimited","limitedHour","limitedMin","PID","success","validFlag","checkBoard","tmp","forEach","element","handleChangeAnswerText1","e","target","value","handleChangeAnswerText2","handleChangeAnswerText3","handleChangeAnswerText4","handleChangeDiscription","setAsAnswer","submit","post","response","alert","switchQuestion","discriptionContent","bind","addNewQuestion","deleteCurrentQuestion","render","map","item","color","handleSubmit","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';  \r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Media } from 'reactstrap'; \r\nimport Axios from \"axios\";   \r\nconst initQuestions=   [\r\n  {\r\n      questionText: '',\r\n      answerOptions: [\r\n          { answerText: '', isCorrect: false },\r\n          { answerText: '', isCorrect: true },\r\n          { answerText: '', isCorrect: false },\r\n          { answerText: '', isCorrect: false },\r\n      ],\r\n      key:0\r\n  },\r\n]\r\n    export default class quizEdit extends Component {\r\n\r\n    \r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n              trigger:false,   \r\n              name:\"Description\",\r\n              description:\"\",\r\n              timeLimited:true,\r\n              limitedHour:0,\r\n              limitedMin:0,\r\n              PID:0,\r\n              QID:-1,\r\n              success:true,\r\n              currentQuestion:0,\r\n              questions:initQuestions , \r\n              option1:\"\",\r\n              option2:\"\",\r\n              option3:\"\",\r\n              option4:\"\",\r\n              validFlag:false\r\n            };    \r\n           \r\n          }\r\n        \r\n      \r\n          componentDidMount = () => {\r\n            \r\n            // const url = `https://juice-quiz.herokuapp.com/api/answer/${this.state.QID}`;\r\n          const url= `http://localhost:3001/api/answer/${this.state.QID}`;\r\n            Axios.get(url)\r\n        .then(res=>{return res.data})\r\n        .then( result =>{ \r\n          console.log(\"first fetch\")\r\n          console.log(result);\r\n          console.log(\"end of first fetch\")\r\n          this.setState({data:result},()=>{console.log(this.state.data);});\r\n          this.processData()  ;this.setState({QID:localStorage.getItem(\"QID\")})     \r\n         });\r\n    \r\n        \r\n      }\r\n\r\n      processData = () => {\r\n        this._isMounted = true;\r\n        console.log(\"start to process data\")\r\n        console.log(this.state.data);\r\n        var data= this.state.data\r\n        this.setState({ queslength: data.length/4 });\r\n        var index = this.state.currentQuestion*4;\r\n        console.log()\r\n        console.log(index);\r\n        console.log(this.state.queslength);\r\n        console.log(\"processing\");\r\n\r\n        for (var i=0; i< (data.length/4) ;i++){\r\n        this.setState({ quesText: data[index]['Qtext'] });\r\n        console.log(this.state.quesText)\r\n        var option1 = {'answerText':data[index]['Optionx'],'isCorrect':data[index]['correctness']===1};\r\n        var option2 = {'answerText':data[index+1]['Optionx'],'isCorrect':data[index+1]['correctness']===1};\r\n        var option3 = {'answerText':data[index+2]['Optionx'],'isCorrect':data[index+2]['correctness']===1};\r\n        var option4 = {'answerText':data[index+3]['Optionx'],'isCorrect':data[index+3]['correctness']===1};\r\n        \r\n        this.setState({ opt1: option1 });\r\n        this.setState({ opt2: option2 });\r\n        this.setState({ opt3: option3 });\r\n        this.setState({ opt4: option4 });\r\n        this.setState({ answerOptions: [option1, option2, option3, option4] });\r\n        var q= {\r\n          questionText: this.state.quesText,\r\n          answerOptions: this.state.answerOptions,\r\n          key:i\r\n      };\r\n      this.setState({questions:[...this.state.questions,q]})\r\n    }\r\n      //this.setState({questions:this.state.questions.slice(1)})\r\n      console.log(this.state.questions);\r\n      }\r\n    \r\n    \r\n\r\n\r\n      checkBoard(){ \r\n          \r\n        let tmp=false\r\n       \r\n         this.state.questions.forEach(element => {\r\n           console.log( element.questionText +\", \"+\r\n           element.answerOptions[0].answerText +\", \"+\r\n           element.answerOptions[1].answerText+\", \"+\r\n           element.answerOptions[2].answerText +\", \"+\r\n           element.answerOptions[3].answerText)\r\n           console.log( element.questionText===\"\"||\r\n           element.answerOptions[0].answerText===\"\"||\r\n           element.answerOptions[1].answerText===\"\"||\r\n           element.answerOptions[2].answerText===\"\"||\r\n           element.answerOptions[3].answerText===\"\")\r\n         tmp= tmp||element.questionText===\"\"||\r\n          element.answerOptions[0].answerText===\"\"||\r\n          element.answerOptions[1].answerText===\"\"||\r\n          element.answerOptions[2].answerText===\"\"||\r\n          element.answerOptions[3].answerText===\"\"\r\n          if( tmp\r\n         ) {  \r\n          // alert(\"empty field in questions!\")  \r\n         } \r\n        });\r\n        console.log(\"tmp: \"+tmp)\r\n        return tmp\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n        handleChangeAnswerText1(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[0].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n     \r\n        handleChangeAnswerText2(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[1].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n\r\n\r\n        handleChangeAnswerText3(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[2].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n\r\n        handleChangeAnswerText4(e) {    \r\n          let tmp = [...this.state.questions];       \r\n          tmp[this.state.currentQuestion].answerOptions[3].answerText=e.target.value \r\n            this.setState({ tmp });      \r\n          \r\n        }\r\n        handleChangeDiscription(e) {   \r\n    let tmp = [...this.state.questions];       \r\n    tmp[this.state.currentQuestion].questionText=e.target.value \r\n      this.setState({ tmp });      \r\n    \r\n\r\n        }\r\n\r\n       \r\n        \r\n        setAsAnswer(index){ \r\n        let tmp = [...this.state.questions];       \r\n        tmp[this.state.currentQuestion].answerOptions.forEach(element => {\r\n          element.isCorrect=false\r\n         });\r\n        \r\n        tmp[this.state.currentQuestion].answerOptions[index].isCorrect = true;  \r\n          this.setState({ tmp });    \r\n        console.log(tmp[this.state.currentQuestion].answerOptions[index].isCorrect)     \r\n        }\r\n        \r\n        \r\n        \r\n        //sun\r\n        submit(){   \r\n        //  const url = 'https://juice-quiz.herokuapp.com/api/quizsetCreate';\r\n           const url= 'http://localhost:3001/api/quizsetCreate';\r\n      \r\n         Axios.post(url, { \r\n              QID: localStorage.getItem('QID'), \r\n              questions:this.state.questions \r\n         }).then((response) => { \r\n         console.log(response); \r\n         alert(\"create success\")\r\n         }); \r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      switchQuestion(index){   \r\n    \r\n       this.setState({currentQuestion:index})\r\n        console.log(this.state.questions[this.state.currentQuestion].key)}\r\n       \r\n        // console.log(this.state.questions[this.state.currentQuestion].questionText+\"index1\")\r\n        \r\n       \r\n        \r\n    \r\n\r\n  \r\n\r\n   discriptionContent(){\r\n     \r\n     let description=this.state.questions[this.state.currentQuestion].questionText\r\n     return(\r\n      <textarea    value={description}\r\n      className=\"questionDiscription\" rows=\"5\" cols=\"50\" required onChange={this.handleChangeDiscription.bind(this)} > \r\n </textarea>\r\n     )\r\n   }\r\n\r\n\r\n   addNewQuestion(){\r\n  this.setState({ questions: [...this.state.questions, {\r\n    questionText: '',\r\n    answerOptions: [\r\n        { answerText: '', isCorrect: true },\r\n        { answerText: '', isCorrect: false },\r\n        { answerText: '', isCorrect: false },\r\n        { answerText: '', isCorrect: false },\r\n    ],\r\n    key:this.state.questions.length\r\n}] })  \r\n\r\n \r\n   }\r\n\r\n   deleteCurrentQuestion(){ \r\n     if(this.state.questions.length>1)\r\n   {  let tmp=[]; \r\n     for (let i = 0; i <  this.state.questions.length; i++) {\r\n\r\n      if(this.state.questions[i].key!=this.state.currentQuestion){ \r\n        tmp=[...tmp,this.state.questions[i]] ;  \r\n       }\r\n    }\r\n  \r\n    for (let i = 0; i <  tmp.length; i++) {\r\n    tmp[i].key=i \r\n    console.log(tmp[i].key)\r\n    } \r\n     this.setState({ questions:tmp})  \r\n    this.setState({ currentQuestion:0})}\r\n   }\r\n\r\nrender(){  \r\n   \r\n\treturn (\r\n\t\t<>\r\n        <span>\r\n      \r\n\t\t <div className='editQuizeditBoard'> \r\n         <img src=\"/logo.jpg\" className=\"quizInitIcon\"></img>  \r\n        <div className=\"editQuestionList\">\r\n        {this.state.questions.map((item, index) => {\r\n                return (  \r\n                  this.state.currentQuestion==index&&  <button style={{color:\"black\"}} type=\"button\" onClick={()=>this.switchQuestion(item.key)}>{item.key+1}</button> || <button style={{color:\"white\"}} type=\"button\" onClick={()=>this.switchQuestion(item.key)}>{item.key+1}</button> \r\n               );\r\n             })}\r\n              <button  style={{color:\"white\"}} type=\"button\" onClick={()=>this.addNewQuestion()} >+</button> \r\n       </div>\r\n\r\n         <div className=\"editContent\">\r\n        <form onSubmit={this.handleSubmit} className=\"QEAeditForm\">\r\n              \r\n      <label className='editInput'  > {this.state.name}\r\n        </label>   \r\n       \r\n \r\n\r\n      {  this.discriptionContent()} \r\n \r\n\r\n \r\n\r\n        {/* <li> \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[0].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText1.bind(this)}>\r\n     \r\n          </input>  \r\n      {!this.state.questions[this.state.currentQuestion].answerOptions[0].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(0)} >set as answer</button> \r\n      } \r\n      \r\n        </li>\r\n\r\n        <li> \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[1].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText2.bind(this)}>\r\n     \r\n     </input>  \r\n        {!this.state.questions[this.state.currentQuestion].answerOptions[1].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(1)} >set as answer</button> \r\n      } \r\n      \r\n        </li>\r\n\r\n        <li> \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[2].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText3.bind(this)}>\r\n     \r\n     </input> \r\n            {!this.state.questions[this.state.currentQuestion].answerOptions[2].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(2)} >set as answer</button> \r\n      } \r\n        </li> \r\n\r\n        <li> \r\n        <input value={this.state.questions[this.state.currentQuestion].answerOptions[3].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText4.bind(this)}>\r\n     \r\n     </input> \r\n           {!this.state.questions[this.state.currentQuestion].answerOptions[3].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(3)} >set as answer</button> \r\n      } \r\n        </li> */}\r\n      \r\n      <input value={this.state.questions[this.state.currentQuestion].answerOptions[0].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText1.bind(this)}>\r\n     \r\n     </input>  \r\n {!this.state.questions[this.state.currentQuestion].answerOptions[0].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(0)} >set as answer</button>  ||<label style={{display:\"inline-block\"}}>√</label>\r\n }  \r\n\r\n   <input value={this.state.questions[this.state.currentQuestion].answerOptions[1].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText2.bind(this)}>\r\n\r\n</input>  \r\n   {!this.state.questions[this.state.currentQuestion].answerOptions[1].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(1)} >set as answer</button> ||<label>√</label>\r\n } \r\n  \r\n\r\n   <input value={this.state.questions[this.state.currentQuestion].answerOptions[2].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText3.bind(this)}>\r\n\r\n</input> \r\n       {!this.state.questions[this.state.currentQuestion].answerOptions[2].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(2)} >set as answer</button>  ||<label>√</label>\r\n }  \r\n\r\n   <input value={this.state.questions[this.state.currentQuestion].answerOptions[3].answerText} type=\"text\"   className=\"editQuizOption\" required onChange={this.handleChangeAnswerText4.bind(this)}>\r\n\r\n</input> \r\n      {!this.state.questions[this.state.currentQuestion].answerOptions[3].isCorrect&&<button type=\"button\" className=\"editButton\" onClick={()=>this.setAsAnswer(3)} >set as answer</button>  ||<label>√</label>\r\n }  \r\n\r\n\r\n       <div className=\"editListButton\"> \r\n       <button  type=\"button\"  onClick={()=>this.deleteCurrentQuestion()} >delete</button> \r\n       </div>\r\n     {!this.checkBoard()&&  <Link to='/'>  \r\n      <button type=\"button\" className=\"QEAsubmit\" onClick={()=>this.submit()} >Create</button> \r\n        </Link> }  \r\n       </form>\r\n       </div>\r\n         </div>\r\n         </span>\r\n\t\t\t  </>\r\n\t\t\t  \r\n\t);\r\n  \r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}