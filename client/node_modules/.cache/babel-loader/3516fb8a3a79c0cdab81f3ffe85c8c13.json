{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dry19\\\\Documents\\\\GitHub\\\\Juice-Quiz\\\\client\\\\src\\\\Answering.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport '';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // const url = 'https://juice-quiz.herokuapp.com/api/get';\n      const url = 'http://localhost:3001/api/get';\n      console.log(\"Component did mount\");\n      setTimeout(() => {\n        fetch(url).then(response => {\n          return response.json();\n        }).then(json => {\n          console.log(json);\n          var myJSON = JSON.stringify(json);\n          var myObj = JSON.parse(myJSON);\n          this.setState({\n            ques: JSON.stringify(myObj)\n          });\n          console.log(\"before\");\n          this.processData();\n          console.log(\"after\");\n        });\n      });\n    };\n\n    this.processData = () => {\n      var data = JSON.parse(this.state.ques);\n      this.setState({\n        queslength: data[\"count(QuestionID)\"]\n      });\n      let index = this.state.currentQuestion;\n      console.log(index);\n      console.log(this.state.queslength);\n      console.log(\"processing\");\n      let Optionx = data[index + 1]['Optionx'];\n      var option1 = Optionx[0];\n      var option2 = Optionx[1];\n      var option3 = Optionx[2];\n      var option4 = Optionx[3];\n      this.setState({\n        quesText: data[index + 1]['Qtext']\n      });\n      this.setState({\n        opt1: option1\n      });\n      this.setState({\n        opt2: option2\n      });\n      this.setState({\n        opt3: option3\n      });\n      this.setState({\n        opt4: option4\n      });\n      this.setState({\n        answerOptions: [option1, option2, option3, option4]\n      });\n    };\n\n    this.handleNextQuestion = answerOption => {\n      var currentQuestion = this.state.currentQuestion;\n      console.log('handler');\n      var isCorrect = false;\n\n      if (answerOption[\"correctness\"] === 1) {\n        isCorrect = true;\n      }\n\n      var currentScore = this.state.currentScore;\n      var questlen = this.state.queslength;\n      const nextQuestion = currentQuestion + 1;\n      console.log('nextQuestion');\n      console.log('questlen');\n      this.setState({\n        currentQuestion: nextQuestion\n      });\n\n      if (nextQuestion < questlen) {\n        if (isCorrect) {\n          currentScore = currentScore + 1;\n          this.setState({\n            currentScore: currentScore\n          });\n        }\n      } else {\n        if (isCorrect) {\n          currentScore = currentScore + 1;\n          this.setState({\n            currentScore: currentScore\n          });\n        }\n\n        this.setState({\n          showScore: true\n        });\n      }\n\n      ;\n      console.log(this.state.currentQuestion);\n      this.processData();\n    };\n\n    this.state = {\n      currentQuestion: 0,\n      showScore: false,\n      currentScore: 0,\n      ques: [],\n      queslength: 0,\n      quesText: \"\",\n      opt1: \"\",\n      opt2: \"\",\n      opt3: \"\",\n      opt4: \"\",\n      answerOptions: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 4\n      }\n    }, this.state.showScore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }\n    }, \"You scored  out of \", this.state.currentScore) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Question \", this.state.currentQuestion + 1, \" \"), \"/\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 8\n      }\n    }, this.state.quesText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, this.state.answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleNextQuestion(answerOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, answerOption['Optionx'])))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dry19/Documents/GitHub/Juice-Quiz/client/src/Answering.js"],"names":["React","Component","App","constructor","props","componentDidMount","url","console","log","setTimeout","fetch","then","response","json","myJSON","JSON","stringify","myObj","parse","setState","ques","processData","data","state","queslength","index","currentQuestion","Optionx","option1","option2","option3","option4","quesText","opt1","opt2","opt3","opt4","answerOptions","handleNextQuestion","answerOption","isCorrect","currentScore","questlen","nextQuestion","showScore","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport ''\r\n\r\n\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentQuestion: 0,\r\n\t\t\tshowScore: false,\r\n\t\t\tcurrentScore: 0,\r\n\t\t\tques: [],\r\n\t\t\tqueslength: 0,\r\n\t\t\tquesText: \"\",\r\n\t\t\topt1: \"\",\r\n\t\t\topt2: \"\",\r\n\t\t\topt3: \"\",\r\n\t\t\topt4: \"\",\r\n\t\t\tanswerOptions: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n        // const url = 'https://juice-quiz.herokuapp.com/api/get';\r\n\t\tconst url= 'http://localhost:3001/api/get';\r\n\t\tconsole.log(\"Component did mount\")\r\n\t\tsetTimeout(() => {\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(response => { return response.json() })\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tconsole.log(json);\r\n\t\t\t\t\tvar myJSON = JSON.stringify(json);\r\n\t\t\t\t\tvar myObj = JSON.parse(myJSON);\r\n\t\t\t\t\tthis.setState({ ques: JSON.stringify(myObj) });\r\n\t\t\t\t\tconsole.log(\"before\");\r\n\t\t\t\t\tthis.processData();\r\n\t\t\t\t\tconsole.log(\"after\");\r\n\r\n\t\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprocessData = () => {\r\n\t\tvar data = JSON.parse(this.state.ques);\r\n\t\tthis.setState({ queslength: data[\"count(QuestionID)\"] });\r\n\t\tlet index = this.state.currentQuestion;\r\n\t\tconsole.log(index);\r\n\t\tconsole.log(this.state.queslength);\r\n\t\tconsole.log(\"processing\");\r\n\t\tlet Optionx = data[index + 1]['Optionx'];\r\n\t\tvar option1 = Optionx[0];\r\n\t\tvar option2 = Optionx[1];\r\n\t\tvar option3 = Optionx[2];\r\n\t\tvar option4 = Optionx[3];\r\n\t\tthis.setState({ quesText: data[index + 1]['Qtext'] });\r\n\t\tthis.setState({ opt1: option1 });\r\n\t\tthis.setState({ opt2: option2 });\r\n\t\tthis.setState({ opt3: option3 });\r\n\t\tthis.setState({ opt4: option4 });\r\n\t\tthis.setState({ answerOptions: [option1, option2, option3, option4] });\r\n\t}\r\n\r\n\r\n\thandleNextQuestion = (answerOption) => {\r\n\t\tvar currentQuestion = this.state.currentQuestion;\r\n\t\tconsole.log('handler');\r\n\t\tvar isCorrect = false;\r\n\t\tif (answerOption[\"correctness\"] === 1) { isCorrect = true; }\r\n\r\n\t\tvar currentScore = this.state.currentScore;\r\n\t\tvar questlen = this.state.queslength;\r\n\r\n\t\t\r\n\t\tconst nextQuestion = currentQuestion+1;\r\n\t\tconsole.log('nextQuestion');\r\n\t\tconsole.log('questlen');\r\n\t\tthis.setState({ currentQuestion: nextQuestion });\r\n\t\tif (nextQuestion < questlen) {\r\n\t\t\tif (isCorrect) {\r\n\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\tthis.setState({ currentScore: currentScore });\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tif (isCorrect) {\r\n\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\tthis.setState({ currentScore: currentScore })\r\n\t\t\t}\r\n\t\t\tthis.setState({ showScore: true });\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(this.state.currentQuestion);\r\n\t\tthis.processData();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t{this.state.showScore ? (\r\n\t\t\t\t\t<div className='score-section'>You scored  out of {this.state.currentScore}</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Question {this.state.currentQuestion + 1} </span>/\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.quesText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{this.state.answerOptions.map((answerOption) =>\r\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleNextQuestion(answerOption)}>{answerOption['Optionx']}</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}