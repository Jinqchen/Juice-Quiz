{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dry19\\\\Documents\\\\GitHub\\\\Juice-Quiz\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(\"Component did mount\");\n      setTimeout(() => {\n        fetch('https://juice-quiz.herokuapp.com/api/get').then(response => {\n          return response.json();\n        }).then(json => {\n          console.log(json);\n          var myJSON = JSON.stringify(json);\n          var myObj = JSON.parse(myJSON);\n          this.setState({\n            ques: JSON.stringify(myObj)\n          });\n          this.processData();\n          console.log(\"y\");\n        });\n      });\n    };\n\n    this.processData = () => {\n      var data = JSON.parse(this.state.ques);\n      this.setState({\n        queslength: data[\"count(QuestionID)\"]\n      });\n      let index = this.state.currentQuestion;\n      let Optionx = data[index + 1]['Optionx'];\n      var option1 = Optionx[0];\n      var option2 = Optionx[1];\n      var option3 = Optionx[2];\n      var option4 = Optionx[3];\n      this.setState({\n        quesText: data[index]['questionText']\n      });\n      this.setState({\n        opt1: option1\n      });\n      this.setState({\n        opt2: option2\n      });\n      this.setState({\n        opt3: option3\n      });\n      this.setState({\n        opt4: option4\n      });\n      this.setState({\n        answerOptions: [option1, option2, option3, option4]\n      });\n      this.setState({\n        RIGHT: data[index]['correct']\n      });\n      console.log(this.state.RIGHT);\n    };\n\n    this.handleNextQuestion = answerOption => {\n      var currentQuestion = this.state.currentQuestion;\n      var isCorrect = false;\n\n      if (answerOption[\"correctness\"] === 1) {\n        isCorrect = true;\n      }\n\n      var currentScore = this.state.currentScore;\n      var questlen = this.state.queslength;\n      const nextQuestion = currentQuestion + 1;\n\n      if (nextQuestion < questlen) {\n        if (isCorrect) {\n          currentScore = currentScore + 1;\n          this.setState({\n            currentScore: currentScore\n          });\n        } else {}\n\n        this.setState({\n          currentQuestion: nextQuestion\n        });\n      } else {\n        if (isCorrect) {\n          currentScore = currentScore + 1;\n          this.setState({\n            currentScore: currentScore\n          });\n        }\n\n        this.setState({\n          showScore: true\n        });\n      }\n\n      this.processData();\n    };\n\n    this.state = {\n      currentQuestion: 0,\n      showScore: false,\n      currentScore: 0,\n      ques: [],\n      queslength: 0,\n      quesText: \"\",\n      opt1: \"\",\n      opt2: \"\",\n      opt3: \"\",\n      opt4: \"\",\n      answerOptions: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 3\n      }\n    }, this.state.showScore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, \"You scored  out of \", this.state.currentScore) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }\n    }, \"Question \", this.state.currentQuestion + 1, \" \"), \"/\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, this.state.quesText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }, this.state.answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleNextQuestion(answerOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 8\n      }\n    }, answerOption['Optionx'])))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dry19/Documents/GitHub/Juice-Quiz/client/src/App.js"],"names":["React","Component","App","constructor","props","componentDidMount","console","log","setTimeout","fetch","then","response","json","myJSON","JSON","stringify","myObj","parse","setState","ques","processData","data","state","queslength","index","currentQuestion","Optionx","option1","option2","option3","option4","quesText","opt1","opt2","opt3","opt4","answerOptions","RIGHT","handleNextQuestion","answerOption","isCorrect","currentScore","questlen","nextQuestion","showScore","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentQuestion:0,\r\n\t\t\tshowScore:false,\r\n\t\t\tcurrentScore:0,\r\n\t\t\tques:[],\r\n\t\t\tqueslength:0,\r\n\t\t\tquesText:\"\",\r\n\t\t\topt1:\"\",\r\n\t\t\topt2:\"\",\r\n\t\t\topt3:\"\",\r\n\t\t\topt4:\"\",\r\n\t\t\tanswerOptions:[]\r\n\t\t};\r\n\t  }\r\n\t\r\n\tcomponentDidMount=()=>{\r\n       \r\n\t\tconsole.log(\"Component did mount\")\r\n\t\tsetTimeout(()=>{\r\n\t\t\tfetch('https://juice-quiz.herokuapp.com/api/get')\r\n        .then(response => {return response.json()})\r\n        .then(json=>  {\r\n\t\t console.log(json);\r\n\t\t var myJSON = JSON.stringify(json);\r\n\t     var myObj = JSON.parse(myJSON);\r\n\t\t this.setState({ques:JSON.stringify(myObj) });\r\n\t\t this.processData();\r\n\t\t console.log(\"y\")\r\n\t\t\r\n   })   \r\n})\r\n   \r\n\r\n      }\r\n    \r\n\r\n\r\n\r\n\t    processData =()=>{\r\n\t\t\tvar data = JSON.parse(this.state.ques);\r\n\t\t\tthis.setState({queslength:data[\"count(QuestionID)\"]});\r\n\t\t\tlet index = this.state.currentQuestion;\r\n\t\t\tlet Optionx = data[index+1]['Optionx'];\r\n\t\t\tvar option1 =Optionx[0];\r\n\t\t\tvar option2 =Optionx[1];\r\n\t\t\tvar option3 =Optionx[2];\r\n\t\t\tvar option4 =Optionx[3];\r\n\t\t\tthis.setState({quesText:data[index]['questionText']});\r\n\t\t\tthis.setState({opt1:option1});\r\n\t\t\tthis.setState({opt2:option2});\r\n\t\t\tthis.setState({opt3:option3});\r\n\t\t\tthis.setState({opt4:option4});\r\n\t\t\tthis.setState({answerOptions:[option1,option2,option3,option4]});\r\n\t\t\tthis.setState({RIGHT: data[index]['correct']});\r\n            console.log(this.state.RIGHT);\r\n\t\t}\r\n\t\t\r\n        \r\n\t\thandleNextQuestion =(answerOption)=>{\r\n\t\tvar currentQuestion = this.state.currentQuestion;\r\n\t\tvar isCorrect = false;\r\n\t    if (answerOption[\"correctness\"] === 1){isCorrect = true;}\r\n\r\n\t    var currentScore = this.state.currentScore;\r\n\t    var questlen = this.state.queslength;\r\n\t\tconst nextQuestion=currentQuestion+1;\r\n\t\tif(nextQuestion<questlen){\r\n\t\t\tif(isCorrect){\r\n\t\t\t \tcurrentScore = currentScore +1;\r\n\t\t\t\t this.setState({currentScore:currentScore});\r\n\t\t\t}else{\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({currentQuestion:nextQuestion});\r\n\t\t}else{\r\n\t\t\tif(isCorrect){\r\n\t\t\t\tcurrentScore = currentScore +1;\r\n\t\t\t\tthis.setState({currentScore:currentScore})}\r\n\t\t\t    this.setState({showScore:true}) ;\r\n\t\t}\r\n\t\tthis.processData();\r\n\t}\r\n\t\r\n\r\n   \r\n\r\n\r\n\t\t\r\n  render(){\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{this.state.showScore ? (\r\n\t\t\t\t<div className='score-section'>You scored  out of {this.state.currentScore}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {this.state.currentQuestion+1} </span>/\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{this.state.quesText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t {this.state.answerOptions.map((answerOption)=>\r\n\t\t\t\t\t\t <button onClick={()=>this.handleNextQuestion(answerOption)}>{answerOption['Optionx']}</button>\r\n\t\t\t\t\t\t )}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}}\r\n"]},"metadata":{},"sourceType":"module"}