{"version":3,"sources":["header/signUpPop.js","App.js","header/header.js","index.js"],"names":["signUp","Component","props","state","trigger","userName","email","password","conformPassword","e","this","setState","target","value","getUserName","getPassword","getEmail","getConfirm","className","type","placeholder","name","required","onChange","handleChangeEmail","bind","handleChangeUserName","handleChangePassWord","handleChangeConfirmPassword","header","visible","confirmPassword","signUpemail","console","log","confirm","onClick","submit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfe80ae4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';  \r\nimport './signUpPop.css' \r\n\r\n \r\n    export default class signUp extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n              trigger:false,\r\n                userName:\"\",\r\n                email:\"\",\r\n                password:\"\",\r\n                conformPassword:\"\",\r\n            };\r\n            \r\n          }\r\n          handleChangeUserName(e) { \r\n             this.setState({userName: e.target.value});  \r\n             this.props.getUserName(this.state.userName)\r\n            \r\n        }\r\n        handleChangePassWord(e) {  \r\n          this.setState({password: e.target.value});  \r\n          this.props.getPassword(this.state.password)\r\n        \r\n     }\r\n   \r\n       handleChangeEmail(e) {  \r\n     this.setState({email: e.target.value});  \r\n     this.props.getEmail(this.state.email)\r\n    \r\n}\r\n\r\n    handleChangeConfirmPassword(e){\r\n      this.setState({conformPassword: e.target.value});\r\n      this.props.getConfirm(this.state.conformPassword)\r\n\r\n    }\r\n      render(){ \r\n        \r\n        return (\r\n          \r\n            <div>\r\n            \r\n            <div className='signUpBoard'>\r\n\r\n            <label className='SIGNUP'>SignUp</label> \r\n                <div className=\"userInput\">    \r\n\r\n                \r\n                    <label>Email:</label>\r\n                    <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required onChange={this.handleChangeEmail.bind(this)}></input>\r\n                  </div>\r\n                  <div className=\"userInput\">    \r\n                    <label>UserName:</label>\r\n                    <input type=\"text\" placeholder=\"Enter UserName\" name=\"useName\" required  onChange={this.handleChangeUserName.bind(this)}>\r\n\r\n                    </input>\r\n                  </div>\r\n                  <div className=\"userInput\">    \r\n                    <label>Password:</label>\r\n                    <input type=\"text\" placeholder=\"Enter password\" name=\"password\" required onChange={this.handleChangePassWord.bind(this)}></input>\r\n                  </div>\r\n                  <div className=\"userInput\">    \r\n                    <label>Confirm your pass word:</label>\r\n                    <input type=\"text\" placeholder=\"Confirm your password\" name=\"confirmPassword\" required onChange={this.handleChangeConfirmPassword.bind(this)}></input>\r\n                  </div>\r\n                 \r\n                  </div>\r\n\r\n                  \r\n                  </div>\r\n        );\r\n      \r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentQuestion: 0,\r\n\t\t\tshowScore: false,\r\n\t\t\tcurrentScore: 0,\r\n\t\t\tques: [],\r\n\t\t\tqueslength: 0,\r\n\t\t\tquesText: \"\",\r\n\t\t\topt1: \"\",\r\n\t\t\topt2: \"\",\r\n\t\t\topt3: \"\",\r\n\t\t\topt4: \"\",\r\n\t\t\tanswerOptions: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\r\n\t\tconsole.log(\"Component did mount\")\r\n\t\tsetTimeout(() => {\r\n\t\t\tfetch('https://juice-quiz.herokuapp.com/api/get')\r\n\t\t\t\t.then(response => { return response.json() })\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tconsole.log(json);\r\n\t\t\t\t\tvar myJSON = JSON.stringify(json);\r\n\t\t\t\t\tvar myObj = JSON.parse(myJSON);\r\n\t\t\t\t\tthis.setState({ ques: JSON.stringify(myObj) });\r\n\t\t\t\t\tconsole.log(\"before\");\r\n\t\t\t\t\tthis.processData();\r\n\t\t\t\t\tconsole.log(\"after\");\r\n\r\n\t\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprocessData = () => {\r\n\t\tvar data = JSON.parse(this.state.ques);\r\n\t\tthis.setState({ queslength: data[\"count(QuestionID)\"] });\r\n\t\tlet index = this.state.currentQuestion;\r\n\t\tconsole.log(index);\r\n\t\tconsole.log(this.state.queslength);\r\n\t\tconsole.log(\"processing\");\r\n\t\tlet Optionx = data[index + 1]['Optionx'];\r\n\t\tvar option1 = Optionx[0];\r\n\t\tvar option2 = Optionx[1];\r\n\t\tvar option3 = Optionx[2];\r\n\t\tvar option4 = Optionx[3];\r\n\t\tthis.setState({ quesText: data[index + 1]['Qtext'] });\r\n\t\tthis.setState({ opt1: option1 });\r\n\t\tthis.setState({ opt2: option2 });\r\n\t\tthis.setState({ opt3: option3 });\r\n\t\tthis.setState({ opt4: option4 });\r\n\t\tthis.setState({ answerOptions: [option1, option2, option3, option4] });\r\n\t}\r\n\r\n\r\n\thandleNextQuestion = (answerOption) => {\r\n\t\tvar currentQuestion = this.state.currentQuestion;\r\n\t\tconsole.log('handler');\r\n\t\tvar isCorrect = false;\r\n\t\tif (answerOption[\"correctness\"] === 1) { isCorrect = true; }\r\n\r\n\t\tvar currentScore = this.state.currentScore;\r\n\t\tvar questlen = this.state.queslength;\r\n\r\n\t\t\r\n\t\tconst nextQuestion = currentQuestion+1;\r\n\t\tconsole.log('nextQuestion');\r\n\t\tconsole.log('questlen');\r\n\t\tthis.setState({ currentQuestion: nextQuestion });\r\n\t\tif (nextQuestion < questlen) {\r\n\t\t\tif (isCorrect) {\r\n\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\tthis.setState({ currentScore: currentScore });\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tif (isCorrect) {\r\n\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\tthis.setState({ currentScore: currentScore })\r\n\t\t\t}\r\n\t\t\tthis.setState({ showScore: true });\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(this.state.currentQuestion);\r\n\t\tthis.processData();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t{this.state.showScore ? (\r\n\t\t\t\t\t<div className='score-section'>You scored  out of {this.state.currentScore}</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Question {this.state.currentQuestion + 1} </span>/\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.quesText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{this.state.answerOptions.map((answerOption) =>\r\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleNextQuestion(answerOption)}>{answerOption['Optionx']}</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport './header.css' ; \r\nimport Signup from'./signUpPop';\r\n//import Axios from \"axios\"\r\n\r\n\r\nexport default class header extends Component {\r\n\r\n  \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n            visible:false, \r\n            userName:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n\t\t};\r\n\t  }\r\n//     Â submit =()=>{\r\n//       Axios.post(\"https://juice-quiz.herokuapp.com/api/register\", { \r\n//       username: this.state.userName, \r\n//       email: this.state.email, \r\n//       password:this.state.password,\r\n//       confirmPassword:this.state.confirmPassword \r\n//  }).then((response) => { \r\n//  console.log(response); \r\n//  }); \r\n      \r\n//       this.setState({visible:false})\r\n//   }\r\n    getEmail(signUpemail){\r\n      this.setState({email: signUpemail})\r\n      console.log(\"parent email is:\")\r\n      console.log(this.state.email)\r\n    }\r\n\r\n    getConfirm(confirm){\r\n      this.setState({confirmPassword: confirm})\r\n      console.log(\"parent confirmpassword is:\")\r\n      console.log(this.state.confirmPassword)\r\n    }\r\n\r\n    getUserName(userName){\r\n      this.setState({userName: userName})\r\n      console.log(\"parent userName is:\")\r\n      console.log(this.state.userName)\r\n    }\r\n\r\n    getPassword(password){\r\n      this.setState({password: password})\r\n      console.log(\"parent password is:\")\r\n      console.log(this.state.password)\r\n    }\r\n\r\n  render(){ \r\n      \r\n\treturn (\r\n    \r\n            <div>\r\n            <div className=\"header\">   \r\n            <button onClick={()=>this.setState({visible:true})}  type=\"button\" className='signUp'>Sign up</button>\r\n            </div>            \r\n            {this.state.visible && <Signup getEmail={this.getEmail.bind(this) } getConfirm={this.getConfirm.bind(this)} getPassword={this.getPassword.bind(this)} getUserName={this.getUserName.bind(this)}></Signup>}\r\n \r\n            {this.state.visible &&<div> <button className='submit' onClick={()=>this.submit()}  >submit</button>\r\n                  <button className='cancel' onClick={()=>this.setState({visible:false})}>X</button>\r\n                  </div>}\r\n            </div>\r\n            \r\n        \r\n\t);\r\n}\r\n   \r\n}\r\n\r\n \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Header from './header/header';\r\n\r\nReactDOM.render(\r\n <Header />,\r\n   // <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}