{"version":3,"sources":["App.js","header/signUpPop.js","header/header.js","index.js"],"names":["App","props","componentDidMount","console","log","setTimeout","fetch","then","response","json","myJSON","JSON","stringify","myObj","parse","setState","ques","processData","data","state","queslength","index","currentQuestion","Optionx","option1","option2","option3","option4","quesText","opt1","opt2","opt3","opt4","answerOptions","handleNextQuestion","answerOption","isCorrect","currentScore","questlen","nextQuestion","showScore","className","this","map","onClick","Component","signUp","trigger","userName","email","password","conformPassword","e","target","value","getUserName","getPassword","getEmail","getConfirm","type","placeholder","name","required","onChange","handleChangeEmail","bind","handleChangeUserName","handleChangePassWord","handleChangeConfirmPassword","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20250606.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentQuestion: 0,\r\n\t\t\tshowScore: false,\r\n\t\t\tcurrentScore: 0,\r\n\t\t\tques: [],\r\n\t\t\tqueslength: 0,\r\n\t\t\tquesText: \"\",\r\n\t\t\topt1: \"\",\r\n\t\t\topt2: \"\",\r\n\t\t\topt3: \"\",\r\n\t\t\topt4: \"\",\r\n\t\t\tanswerOptions: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\r\n\t\tconsole.log(\"Component did mount\")\r\n\t\tsetTimeout(() => {\r\n\t\t\tfetch('https://juice-quiz.herokuapp.com/api/get')\r\n\t\t\t\t.then(response => { return response.json() })\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tconsole.log(json);\r\n\t\t\t\t\tvar myJSON = JSON.stringify(json);\r\n\t\t\t\t\tvar myObj = JSON.parse(myJSON);\r\n\t\t\t\t\tthis.setState({ ques: JSON.stringify(myObj) });\r\n\t\t\t\t\tconsole.log(\"before\");\r\n\t\t\t\t\tthis.processData();\r\n\t\t\t\t\tconsole.log(\"after\");\r\n\r\n\t\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprocessData = () => {\r\n\t\tvar data = JSON.parse(this.state.ques);\r\n\t\tthis.setState({ queslength: data[\"count(QuestionID)\"] });\r\n\t\tlet index = this.state.currentQuestion;\r\n\t\tconsole.log(index);\r\n\t\tconsole.log(this.state.queslength);\r\n\t\tconsole.log(\"processing\");\r\n\t\tlet Optionx = data[index + 1]['Optionx'];\r\n\t\tvar option1 = Optionx[0];\r\n\t\tvar option2 = Optionx[1];\r\n\t\tvar option3 = Optionx[2];\r\n\t\tvar option4 = Optionx[3];\r\n\t\tthis.setState({ quesText: data[index + 1]['Qtext'] });\r\n\t\tthis.setState({ opt1: option1 });\r\n\t\tthis.setState({ opt2: option2 });\r\n\t\tthis.setState({ opt3: option3 });\r\n\t\tthis.setState({ opt4: option4 });\r\n\t\tthis.setState({ answerOptions: [option1, option2, option3, option4] });\r\n\t}\r\n\r\n\r\n\thandleNextQuestion = (answerOption) => {\r\n\t\tvar currentQuestion = this.state.currentQuestion;\r\n\t\tconsole.log('handler');\r\n\t\tvar isCorrect = false;\r\n\t\tif (answerOption[\"correctness\"] === 1) { isCorrect = true; }\r\n\r\n\t\tvar currentScore = this.state.currentScore;\r\n\t\tvar questlen = this.state.queslength;\r\n\r\n\t\t\r\n\t\tconst nextQuestion = currentQuestion+1;\r\n\t\tconsole.log('nextQuestion');\r\n\t\tconsole.log('questlen');\r\n\t\tthis.setState({ currentQuestion: nextQuestion });\r\n\t\tif (nextQuestion < questlen) {\r\n\t\t\tif (isCorrect) {\r\n\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\tthis.setState({ currentScore: currentScore });\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tif (isCorrect) {\r\n\t\t\t\tcurrentScore = currentScore + 1;\r\n\t\t\t\tthis.setState({ currentScore: currentScore })\r\n\t\t\t}\r\n\t\t\tthis.setState({ showScore: true });\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(this.state.currentQuestion);\r\n\t\tthis.processData();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t{this.state.showScore ? (\r\n\t\t\t\t\t<div className='score-section'>You scored  out of {this.state.currentScore}</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Question {this.state.currentQuestion + 1} </span>/\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.quesText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{this.state.answerOptions.map((answerOption) =>\r\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleNextQuestion(answerOption)}>{answerOption['Optionx']}</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport { Component } from 'react';  \nimport './signUpPop.css' \n\n \n    export default class signUp extends Component {\n        constructor(props) {\n            super(props);\n            this.state = { \n              trigger:false,\n                userName:\"\",\n                email:\"\",\n                password:\"\",\n                conformPassword:\"\",\n            };\n            \n          }\n          handleChangeUserName(e) { \n             this.setState({userName: e.target.value});  \n             this.props.getUserName(this.state.userName)\n            \n        }\n        handleChangePassWord(e) {  \n          this.setState({password: e.target.value});  \n          this.props.getPassword(this.state.password)\n        \n     }\n   \n       handleChangeEmail(e) {  \n     this.setState({email: e.target.value});  \n     this.props.getEmail(this.state.email)\n    \n}\n\n    handleChangeConfirmPassword(e){\n      this.setState({conformPassword: e.target.value});\n      this.props.getConfirm(this.state.conformPassword)\n\n    }\n      render(){ \n        \n        return (\n          \n            <div>\n            \n            <div className='signUpBoard'>\n\n            <label className='SIGNUP'>SignUp</label> \n                <div className=\"userInput\">    \n\n                \n                    <label>Email:</label>\n                    <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required onChange={this.handleChangeEmail.bind(this)}></input>\n                  </div>\n                  <div className=\"userInput\">    \n                    <label>UserName:</label>\n                    <input type=\"text\" placeholder=\"Enter UserName\" name=\"useName\" required  onChange={this.handleChangeUserName.bind(this)}>\n\n                    </input>\n                  </div>\n                  <div className=\"userInput\">    \n                    <label>Password:</label>\n                    <input type=\"text\" placeholder=\"Enter password\" name=\"password\" required onChange={this.handleChangePassWord.bind(this)}></input>\n                  </div>\n                  <div className=\"userInput\">    \n                    <label>Confirm your pass word:</label>\n                    <input type=\"text\" placeholder=\"Confirm your password\" name=\"confirmPassword\" required onChange={this.handleChangeConfirmPassword.bind(this)}></input>\n                  </div>\n                 \n                  </div>\n\n                  \n                  </div>\n        );\n      \n    }\n}","import React from 'react';\nimport { Component } from 'react';\nimport './header.css' ; \nimport Signup from'./signUpPop';\n//import Axios from \"axios\"\n\n\nexport default class header extends Component {\n\n  \n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n            visible:false, \n            userName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n\t\t};\n\t  }\n//      submit =()=>{\n//       Axios.post(\"https://juice-quiz.herokuapp.com/api/register\", { \n//       username: this.state.userName, \n//       email: this.state.email, \n//       password:this.state.password,\n//       confirmPassword:this.state.confirmPassword \n//  }).then((response) => { \n//  console.log(response); \n//  }); \n      \n//       this.setState({visible:false})\n//   }\n    getEmail(signUpemail){\n      this.setState({email: signUpemail})\n      console.log(\"parent email is:\")\n      console.log(this.state.email)\n    }\n\n    getConfirm(confirm){\n      this.setState({confirmPassword: confirm})\n      console.log(\"parent confirmpassword is:\")\n      console.log(this.state.confirmPassword)\n    }\n\n    getUserName(userName){\n      this.setState({userName: userName})\n      console.log(\"parent userName is:\")\n      console.log(this.state.userName)\n    }\n\n    getPassword(password){\n      this.setState({password: password})\n      console.log(\"parent password is:\")\n      console.log(this.state.password)\n    }\n\n  render(){ \n      \n\treturn (\n    \n            <div>\n            <div className=\"header\">   \n            <button onClick={()=>this.setState({visible:true})}  type=\"button\" className='signUp'>Sign up</button>\n            </div>            \n            {this.state.visible && <Signup getEmail={this.getEmail.bind(this) } getConfirm={this.getConfirm.bind(this)} getPassword={this.getPassword.bind(this)} getUserName={this.getUserName.bind(this)}></Signup>}\n \n            {this.state.visible &&<div> <button className='submit' onClick={()=>this.submit()}  >submit</button>\n                  <button className='cancel' onClick={()=>this.setState({visible:false})}>X</button>\n                  </div>}\n            </div>\n            \n        \n\t);\n}\n   \n}\n\n \n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Header from './header/header';\r\n\r\nReactDOM.render(\r\n // <Header />,\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}