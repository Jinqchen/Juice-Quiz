backup for database 


-- create table users (
-- UID char(8) unique,
-- Uname char(10) unique,
-- Uemail char(35) unique,
-- Upass char(30),
-- primary key(UID)
-- )
-- create table userstyle(
-- UID CHAR(8),
-- pic blob,
-- primary key(UID),
-- foreign key(UID) references users(UID)
-- );

-- create table quiz (
-- QID INT,
-- ave_rate float,
-- primary key (QID)
-- );
-- create table quizquestion(
-- QID int,
-- QuestionID int,
-- Qtext text,
-- primary key (QID,QuestionID),
-- foreign key (QID) references quiz(QID)
-- on delete no action
-- on update cascade


-- );
-- ALTER TABLE quizquestion ADD UNIQUE (QuestionID);

ALTER TABLE `heroku_a8e492587e5e18a`.`users` 
CHANGE COLUMN `Uname` `Uname` CHAR(10) NOT NULL ,
CHANGE COLUMN `Uemail` `Uemail` CHAR(35) NOT NULL ,
CHANGE COLUMN `Upass` `Upass` CHAR(30) NOT NULL ;



-- drop table platformstyle;
-- drop table platform;
-- create table platform (
-- PID int unique,
-- Pname char(20) unique,

-- primary key(PID)
-- );
-- CREATE table platformstyle(
-- PID int,
-- Pcover char(30),
-- foreign key(PID) references platform(PID)
-- on delete no action
-- on update cascade
-- );

-- insert into  platform(PID,Pname)
-- value(1,'NASA');
-- insert into  platform(PID,Pname)
-- value(2,'MLB');
-- insert into  platform(PID,Pname)
-- value(3,'League of Legend');
-- insert into  platform(PID,Pname)
-- value(4,'Cowboy Bebop');
-- insert into  platform(PID,Pname)
-- value(5,'C++');
-- insert into  platform(PID,Pname)
-- value(6,'JAZZ');
-- insert into  platform(PID,Pname)
-- value(7,'CALCULUS');
-- insert into  platform(PID,Pname)
-- value(8,'Ancient Egypt');


-- create table quizoptions(
-- QID int,
-- QuestionID int,
-- Optionx text,
-- correctness boolean,
-- foreign key(QID)references quiz(QID)
-- on delete no action
-- on update cascade,
-- foreign key(QuestionID) references quizquestion(QuestionID)
-- on delete no action
-- on update cascade

-- )




-- insert into quiz(QID,ave_rate)
-- value(1,1.0);
-- insert into quiz(QID,ave_rate)
-- value(2,1.0);
-- insert into quizquestion(QID,QuestionID,Qtext)
-- value(1,1,"How many days are there in a week");
-- insert into quizquestion(QID,QuestionID,Qtext)
-- value(1,2,"How many hours are there in a day");
-- insert into quizquestion(QID,QuestionID,Qtext)
-- value(1,3,"What is one plus one?");
-- insert into quizquestion(QID,QuestionID,Qtext)
-- value(1,4,"how many days May has?");
-- insert into quizquestion(QID,QuestionID,Qtext)
-- value(1,5,"how many seconds per minute?");

-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,1,'7 days',true);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,1,'2 days',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,1,'12 days',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,1,'14 days',false);

-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,2,'7',true);

-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,2,'5',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,2,'6',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,2,'1',false);

-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,3,'5',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,3,'2',true);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,3,'1',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,3,'8',false);

-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,4,'5',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,4,'65',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,4,'31',true);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,4,'51',false);

-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,5,'5',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,5,'555',false);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,5,'60',true);
-- insert into quizoptions(QID,QuestionID,Optionx,correctness)
-- value(1,5,'90',false);

-- ALTER TABLE quizoptions
-- ADD COLUMN optionnumber int AFTER QuestionID;


-- truncate table quizoptions;
-- select * from quizoptions

-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,1,1,'7 days',true);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,1,2,'2 days',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,1,3,'12 days',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,1,4,'14 days',false);

-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,2,1,'24',true);

-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,2,2,'5',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,2,3,'6',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,2,4,'1',false);

-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,3,1,'5',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,3,2,'2',true);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,3,3,'1',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,3,4,'8',false);

-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,4,1,'5',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,4,2,'65',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,4,3,'31',true);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,4,4,'51',false);

-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,5,1,'5',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,5,2,'555',false);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,5,3,'60',true);
-- insert into quizoptions(QID,QuestionID,optionnumber,Optionx,correctness)
-- value(1,5,4,'90',false);


select * from quizoptions



in program queries:


select optionnumber, Optionx from quizoptions
where QID=1 AND QuestionID=1 ;
-- change QID OR QuestionID to select different quiz option number and options


select correctness from quizoptions
where optionnumber=1 and QID=1 and QuestionID=1 ;
-- change QID OR QuestionID or optionnumber to see different option's corrections

select Optionx ,correctness  from quizoptions
where QID=1 AND QuestionID=1 and optionnumber=1 ;



select count(QuestionID) from quizquestion
where QID=1;

select count(optionnumber) from quizoptions
where QID=1 and QuestionID=1



-- insert into users(UID,Uname,Uemail,Upass)
-- value(1,'firstUser','firstuser@gmail.com','firstuserkey');
-- insert into userstyle (UID,pic)
-- value(1,'user_image/1.png');
ALTER TABLE userstyle MODIFY pic char(30);

select * from users;
select * from userstyle

create table platform (
PID char(8) unique,
Pname char(20) unique,

primary key(PID)
);
CREATE table platformstyle(
PID CHAR(8),
Pcover char(30),
foreign key(PID) references platform(PID)

)



-- insert into platformstyle(PID,Pcover)
-- value(1,'platform_image/1.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(2,'platform_image/2.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(3,'platform_image/3.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(4,'platform_image/4.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(5,'platform_image/5.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(6,'platform_image/6.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(7,'platform_image/7.jpg');
-- insert into platformstyle(PID,Pcover)
-- value(8,'platform_image/8.jpg')

select * from platformstyle;


drop table userstyle;
drop table users;


create table users (
UID int unique not null,
Uname char(10) unique not null,
Uemail char(35) unique not null,
Upass char(30),
primary key(UID)
);
create table userstyle(
UID int,
pic char(30),
primary key(UID),
foreign key(UID) references users(UID)
on delete no action
on update cascade
);
insert into users(UID,Uname,Uemail,Upass)
value(1,'firstUser','firstuser@gmail.com','firstuserkey');
insert into userstyle (UID,pic)
value(1,'user_image/1.png');

-- ALTER TABLE platform 
-- add constraint check (tag in ('Game','Math','Programming','Culture','History','Sport','Tech','Economy','Science','Life hack','Music','Movie','Food'));

-- create table contain (
-- PID INT,
-- QID INT,
-- PRIMARY KEY(PID,QID),
-- FOREIGN KEY (PID) REFERENCES platform (PID)
-- ON DELETE NO ACTION
-- ON UPDATE CASCADE,
-- FOREIGN KEY (QID) REFERENCES quiz (QID)
-- ON DELETE NO ACTION
-- ON UPDATE CASCADE

-- )
-- select * from users

SELECT Pcover,p.PID,Pname from platformstyle s,platform p
where p.tag='Game' and s.PID=p.PID;

-- select * from platformstyle
create table reputation (
Rpoint int default 0,
UID INT,
PID INT,
PRIMARY KEY(UID,PID),
FOREIGN KEY (UID) REFERENCES users(UID)
ON DELETE NO ACTION
ON UPDATE CASCADE,
FOREIGN KEY(PID) references platform(PID)
ON DELETE NO ACTION
ON UPDATE CASCADE

)


-- select Rpoint,PID from reputation 
-- where UID=4

-- ALTER TABLE quiz
-- ADD COLUMN hot int AFTER ave_rate;

-- select * from platform;
-- insert into platform 
-- value(14,'Math','Math');
-- insert into platformstyle
-- value(14,'./platform_image/14.jgp')

-- create table Own(
-- PID INT unique,
-- UID INT unique,
-- PRIMARY KEY(PID,UID),
-- FOREIGN KEY(PID) REFERENCES platform(PID)
-- on delete no action
-- on update cascade,

-- FOREIGN KEY(UID) REFERENCES users(UID)
-- on delete no action
-- on update cascade


-- );
-- create table Coown(
-- PID INT,
-- UID INT,
-- PRIMARY KEY(PID,UID),
-- FOREIGN KEY(PID) REFERENCES platform(PID)
-- on delete no action
-- on update cascade,

-- FOREIGN KEY(UID) REFERENCES users(UID)
-- on delete no action
-- on update cascade


-- );
-- create table subscribe(
-- PID INT,
-- UID INT,
-- PRIMARY KEY(PID,UID),
-- FOREIGN KEY(PID) REFERENCES platform(PID)
-- on delete no action
-- on update cascade,

-- FOREIGN KEY(UID) REFERENCES users(UID)
-- on delete no action
-- on update cascade


-- )
select * from reputation 
order by PID;

-- insert into Own
-- value(1,7),
-- (2,8),
-- (3,9),
-- (4,10),
-- (5,11),
-- (6,12),
-- (7,11),
-- (8,12),
-- (9,8),
-- (10,13),
-- (11,3),
-- (12,5),
-- (13,6)



-- drop table Own;
-- create table Own(
-- PID INT unique,
-- UID INT ,
-- PRIMARY KEY(PID,UID),
-- FOREIGN KEY(PID) REFERENCES platform(PID)
-- on delete no action
-- on update cascade,

-- FOREIGN KEY(UID) REFERENCES users(UID)
-- on delete no action
-- on update cascade


-- );

-- insert into coown
-- value (1,7),
-- (2,4),
-- (3,6),
-- (4,7)
-- insert into subscribe
-- value(1,3),
-- (1,7),
-- (2,8),
-- (2,4),(3,9),(3,6),(4,10),
-- (4,7),
-- (5,11),
-- (5,9),
-- (6,12),
-- (6,10),
-- (7,3),
-- (7,11),(8,12),
-- (8,5),
-- (9,8),
-- (10,13),
-- (11,3),
-- (11,4),
-- (12,5),
-- (13,6)
-- select * from quiz;
-- ALTER TABLE quiz
-- ADD COLUMN description text AFTER hot;
select * from quiz;



